// Converted registration lines
public static final RegistryObject<Item> REDSTONE_SWORD = registerWithCategory("redstone_sword", () -> new RedstoneSword(ToolMaterial.STONE, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BIG_SWORD = registerWithCategory("big_sword", () -> new BigSword(ToolMaterial.EMERALD, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_IGNITER = registerWithCategory("test_nuke_igniter", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_PROPELLANT = registerWithCategory("test_nuke_propellant", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_TIER1_SHIELDING = registerWithCategory("test_nuke_tier1_shielding", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_TIER2_SHIELDING = registerWithCategory("test_nuke_tier2_shielding", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_TIER1_BULLET = registerWithCategory("test_nuke_tier1_bullet", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_TIER2_BULLET = registerWithCategory("test_nuke_tier2_bullet", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_TIER1_TARGET = registerWithCategory("test_nuke_tier1_target", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEST_NUKE_TIER2_TARGET = registerWithCategory("test_nuke_tier2_target", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INGOT_TH232 = registerWithCategory("ingot_th232", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_URANIUM = registerWithCategory("ingot_uranium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_U233 = registerWithCategory("ingot_u233", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_U235 = registerWithCategory("ingot_u235", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_U238 = registerWithCategory("ingot_u238", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_U238M2 = registerWithCategory("ingot_u238m2", () -> new ItemUnstable(350, 200, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INGOT_PLUTONIUM = registerWithCategory("ingot_plutonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PU238 = registerWithCategory("ingot_pu238", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PU239 = registerWithCategory("ingot_pu239", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PU240 = registerWithCategory("ingot_pu240", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PU241 = registerWithCategory("ingot_pu241", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PU_MIX = registerWithCategory("ingot_pu_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_AM241 = registerWithCategory("ingot_am241", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_AM242 = registerWithCategory("ingot_am242", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_AM_MIX = registerWithCategory("ingot_am_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_NEPTUNIUM = registerWithCategory("ingot_neptunium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_POLONIUM = registerWithCategory("ingot_polonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_TECHNETIUM = registerWithCategory("ingot_technetium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_CO60 = registerWithCategory("ingot_co60", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SR90 = registerWithCategory("ingot_sr90", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_AU198 = registerWithCategory("ingot_au198", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PB209 = registerWithCategory("ingot_pb209", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_RA226 = registerWithCategory("ingot_ra226", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_TITANIUM = registerWithCategory("ingot_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_COBALT = registerWithCategory("ingot_cobalt", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_BORON = registerWithCategory("ingot_boron", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_GRAPHITE = registerWithCategory("ingot_graphite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_FIREBRICK = registerWithCategory("ingot_firebrick", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SMORE = registerWithCategory("ingot_smore", () -> new ItemFood(10, 20F, false, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SULFUR = registerWithCategory("sulfur", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NITRA = registerWithCategory("nitra", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NITRA_SMALL = registerWithCategory("nitra_small", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_URANIUM_FUEL = registerWithCategory("ingot_uranium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PLUTONIUM_FUEL = registerWithCategory("ingot_plutonium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_NEPTUNIUM_FUEL = registerWithCategory("ingot_neptunium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_MOX_FUEL = registerWithCategory("ingot_mox_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_AMERICIUM_FUEL = registerWithCategory("ingot_americium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SCHRABIDIUM_FUEL = registerWithCategory("ingot_schrabidium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_THORIUM_FUEL = registerWithCategory("ingot_thorium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_URANIUM_FUEL = registerWithCategory("nugget_uranium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_THORIUM_FUEL = registerWithCategory("nugget_thorium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PLUTONIUM_FUEL = registerWithCategory("nugget_plutonium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_NEPTUNIUM_FUEL = registerWithCategory("nugget_neptunium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_MOX_FUEL = registerWithCategory("nugget_mox_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AMERICIUM_FUEL = registerWithCategory("nugget_americium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_SCHRABIDIUM_FUEL = registerWithCategory("nugget_schrabidium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ADVANCED_ALLOY = registerWithCategory("ingot_advanced_alloy", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_TCALLOY = registerWithCategory("ingot_tcalloy", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_CDALLOY = registerWithCategory("ingot_cdalloy", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_BISMUTH_BRONZE = registerWithCategory("ingot_bismuth_bronze", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ARSENIC_BRONZE = registerWithCategory("ingot_arsenic_bronze", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_BSCCO = registerWithCategory("ingot_bscco", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NITER = registerWithCategory("niter", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_COPPER = registerWithCategory("ingot_copper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_RED_COPPER = registerWithCategory("ingot_red_copper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_TUNGSTEN = registerWithCategory("ingot_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ALUMINUM = registerWithCategory("ingot_aluminum", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FLUORITE = registerWithCategory("fluorite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_BERYLLIUM = registerWithCategory("ingot_beryllium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_STEEL = registerWithCategory("ingot_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_STEEL = registerWithCategory("plate_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_IRON = registerWithCategory("plate_iron", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_LEAD = registerWithCategory("ingot_lead", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_LEAD = registerWithCategory("plate_lead", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_DURA_STEEL = registerWithCategory("plate_dura_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SCHRARANIUM = registerWithCategory("ingot_schraranium", () -> new ItemSchraranium(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SCHRABIDIUM = registerWithCategory("ingot_schrabidium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SCHRABIDATE = registerWithCategory("ingot_schrabidate", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_SCHRABIDIUM = registerWithCategory("plate_schrabidium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_COPPER = registerWithCategory("plate_copper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_GOLD = registerWithCategory("plate_gold", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ADVANCED_ALLOY = registerWithCategory("plate_advanced_alloy", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> LITHIUM = registerWithCategory("lithium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ZIRCONIUM = registerWithCategory("ingot_zirconium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SEMTEX = registerWithCategory("ingot_semtex", () -> new ItemLemon(4, 5, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_C4 = registerWithCategory("ingot_c4", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PHOSPHORUS = registerWithCategory("ingot_phosphorus", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_ADVANCED_ALLOY = registerWithCategory("coil_advanced_alloy", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_ADVANCED_TORUS = registerWithCategory("coil_advanced_torus", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_MAGNETIZED_TUNGSTEN = registerWithCategory("ingot_magnetized_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_COMBINE_STEEL = registerWithCategory("ingot_combine_steel", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_MIXED = registerWithCategory("plate_mixed", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_PAA = registerWithCategory("plate_paa", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> PIPES_STEEL = registerWithCategory("pipes_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> DRILL_TITANIUM = registerWithCategory("drill_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_DALEKANIUM = registerWithCategory("plate_dalekanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_EUPHEMIUM = registerWithCategory("plate_euphemium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> BOLT = registerWithCategory("bolt", () -> new ItemAutogen(MaterialShapes.BOLT, new Item.Properties()).oun("boltntm"), ItemCategory.PARTS);
public static final RegistryObject<Item> BOLT_SPIKE = registerWithCategory("bolt_spike", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_POLYMER = registerWithCategory("plate_polymer", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_KEVLAR = registerWithCategory("plate_kevlar", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_DINEUTRONIUM = registerWithCategory("plate_dineutronium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_DESH = registerWithCategory("plate_desh", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_BISMUTH = registerWithCategory("plate_bismuth", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SOLINIUM = registerWithCategory("ingot_solinium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_SOLINIUM = registerWithCategory("nugget_solinium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PHOTO_PANEL = registerWithCategory("photo_panel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAT_BASE = registerWithCategory("sat_base", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> THRUSTER_NUCLEAR = registerWithCategory("thruster_nuclear", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAFETY_FUSE = registerWithCategory("safety_fuse", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_GENERIC = registerWithCategory("part_generic", () -> new ItemGenericPart(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ITEM_SECRET = registerWithCategory("item_secret", () -> new ItemEnumMulti(EnumSecretType.class, true, true, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHEMICAL_DYE = registerWithCategory("chemical_dye", () -> new ItemChemicalDye(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRAYON = registerWithCategory("crayon", () -> new ItemCrayon(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> UNDEFINED = registerWithCategory("undefined", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_URANIUM = registerWithCategory("billet_uranium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_U233 = registerWithCategory("billet_u233", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_U235 = registerWithCategory("billet_u235", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_U238 = registerWithCategory("billet_u238", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_TH232 = registerWithCategory("billet_th232", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PLUTONIUM = registerWithCategory("billet_plutonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PU238 = registerWithCategory("billet_pu238", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PU239 = registerWithCategory("billet_pu239", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PU240 = registerWithCategory("billet_pu240", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PU241 = registerWithCategory("billet_pu241", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PU_MIX = registerWithCategory("billet_pu_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AM241 = registerWithCategory("billet_am241", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AM242 = registerWithCategory("billet_am242", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AM_MIX = registerWithCategory("billet_am_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_NEPTUNIUM = registerWithCategory("billet_neptunium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_POLONIUM = registerWithCategory("billet_polonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_TECHNETIUM = registerWithCategory("billet_technetium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_COBALT = registerWithCategory("billet_cobalt", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_CO60 = registerWithCategory("billet_co60", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_SR90 = registerWithCategory("billet_sr90", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AU198 = registerWithCategory("billet_au198", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PB209 = registerWithCategory("billet_pb209", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_RA226 = registerWithCategory("billet_ra226", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_ACTINIUM = registerWithCategory("billet_actinium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_SCHRABIDIUM = registerWithCategory("billet_schrabidium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_SOLINIUM = registerWithCategory("billet_solinium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_GH336 = registerWithCategory("billet_gh336", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AUSTRALIUM = registerWithCategory("billet_australium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AUSTRALIUM_LESSER = registerWithCategory("billet_australium_lesser", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AUSTRALIUM_GREATER = registerWithCategory("billet_australium_greater", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_URANIUM_FUEL = registerWithCategory("billet_uranium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_THORIUM_FUEL = registerWithCategory("billet_thorium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PLUTONIUM_FUEL = registerWithCategory("billet_plutonium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_NEPTUNIUM_FUEL = registerWithCategory("billet_neptunium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_MOX_FUEL = registerWithCategory("billet_mox_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_AMERICIUM_FUEL = registerWithCategory("billet_americium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_LES = registerWithCategory("billet_les", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_SCHRABIDIUM_FUEL = registerWithCategory("billet_schrabidium_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_HES = registerWithCategory("billet_hes", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PO210BE = registerWithCategory("billet_po210be", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_RA226BE = registerWithCategory("billet_ra226be", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_PU238BE = registerWithCategory("billet_pu238be", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_BERYLLIUM = registerWithCategory("billet_beryllium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_BISMUTH = registerWithCategory("billet_bismuth", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_ZIRCONIUM = registerWithCategory("billet_zirconium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_YHARONITE = registerWithCategory("billet_yharonite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_BALEFIRE_GOLD = registerWithCategory("billet_balefire_gold", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_FLASHLEAD = registerWithCategory("billet_flashlead", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_ZFB_BISMUTH = registerWithCategory("billet_zfb_bismuth", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_ZFB_PU241 = registerWithCategory("billet_zfb_pu241", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_ZFB_AM_MIX = registerWithCategory("billet_zfb_am_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_NUCLEAR_WASTE = registerWithCategory("billet_nuclear_waste", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BALL_RESIN = registerWithCategory("ball_resin", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_DURA_STEEL = registerWithCategory("ingot_dura_steel", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_POLYMER = registerWithCategory("ingot_polymer", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_BAKELITE = registerWithCategory("ingot_bakelite", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_BIORUBBER = registerWithCategory("ingot_biorubber", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_RUBBER = registerWithCategory("ingot_rubber", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PET = registerWithCategory("ingot_pet", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PC = registerWithCategory("ingot_pc", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_PVC = registerWithCategory("ingot_pvc", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_DESH = registerWithCategory("ingot_desh", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_DESH = registerWithCategory("nugget_desh", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_DINEUTRONIUM = registerWithCategory("ingot_dineutronium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_DINEUTRONIUM = registerWithCategory("nugget_dineutronium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_DINEUTRONIUM = registerWithCategory("powder_dineutronium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_STARMETAL = registerWithCategory("ingot_starmetal", () -> new ItemStarmetal(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_GUNMETAL = registerWithCategory("ingot_gunmetal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_GUNMETAL = registerWithCategory("plate_gunmetal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_WEAPONSTEEL = registerWithCategory("ingot_weaponsteel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_WEAPONSTEEL = registerWithCategory("plate_weaponsteel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SATURNITE = registerWithCategory("ingot_saturnite", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_SATURNITE = registerWithCategory("plate_saturnite", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_FERROURANIUM = registerWithCategory("ingot_ferrouranium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_FIBERGLASS = registerWithCategory("ingot_fiberglass", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ASBESTOS = registerWithCategory("ingot_asbestos", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ASBESTOS = registerWithCategory("powder_asbestos", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ELECTRONIUM = registerWithCategory("ingot_electronium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_ZIRCONIUM = registerWithCategory("nugget_zirconium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_MERCURY_TINY = registerWithCategory("nugget_mercury_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_MERCURY = registerWithCategory("nugget_mercury", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BOTTLE_MERCURY = registerWithCategory("bottle_mercury", () -> new ItemCustomLore(new Item.Properties()).setContainerItem(Items.glass_bottle), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_CALCIUM = registerWithCategory("ingot_calcium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CALCIUM = registerWithCategory("powder_calcium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_CADMIUM = registerWithCategory("ingot_cadmium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CADMIUM = registerWithCategory("powder_cadmium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BISMUTH = registerWithCategory("powder_bismuth", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_MUD = registerWithCategory("ingot_mud", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_CFT = registerWithCategory("ingot_cft", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_BYPRODUCT = registerWithCategory("ore_byproduct", () -> new ItemByproduct(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_BEDROCK = registerWithCategory("ore_bedrock", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_CENTRIFUGED = registerWithCategory("ore_centrifuged", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_CLEANED = registerWithCategory("ore_cleaned", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_SEPARATED = registerWithCategory("ore_separated", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_PURIFIED = registerWithCategory("ore_purified", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_NITRATED = registerWithCategory("ore_nitrated", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_NITROCRYSTALLINE = registerWithCategory("ore_nitrocrystalline", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_DEEPCLEANED = registerWithCategory("ore_deepcleaned", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_SEARED = registerWithCategory("ore_seared", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ORE_ENRICHED = registerWithCategory("ore_enriched", () -> new ItemBedrockOre(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BEDROCK_ORE_BASE = registerWithCategory("bedrock_ore_base", () -> new ItemBedrockOreBase(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BEDROCK_ORE = registerWithCategory("bedrock_ore", () -> new ItemBedrockOreNew(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BEDROCK_ORE_FRAGMENT = registerWithCategory("bedrock_ore_fragment", () -> new ItemAutogen(MaterialShapes.FRAGMENT, new Item.Properties()).aot(Mats.MAT_BISMUTH, "bedrock_ore_fragment_bismuth"), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_LANTHANIUM = registerWithCategory("ingot_lanthanium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ACTINIUM = registerWithCategory("ingot_actinium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_METEORITE = registerWithCategory("ingot_meteorite", () -> new ItemHot(200, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_METEORITE_FORGED = registerWithCategory("ingot_meteorite_forged", () -> new ItemHot(200, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BLADE_METEORITE = registerWithCategory("blade_meteorite", () -> new ItemHot(200, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_STEEL_DUSTED = registerWithCategory("ingot_steel_dusted", () -> new ItemHotDusted(200, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_CHAINSTEEL = registerWithCategory("ingot_chainsteel", () -> new ItemHot(100, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ARMOR_TITANIUM = registerWithCategory("plate_armor_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ARMOR_AJR = registerWithCategory("plate_armor_ajr", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ARMOR_HEV = registerWithCategory("plate_armor_hev", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ARMOR_LUNAR = registerWithCategory("plate_armor_lunar", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ARMOR_FAU = registerWithCategory("plate_armor_fau", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ARMOR_DNT = registerWithCategory("plate_armor_dnt", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> OIL_TAR = registerWithCategory("oil_tar", () -> new ItemEnumMulti(EnumTarType.class, true, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SOLID_FUEL = registerWithCategory("solid_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SOLID_FUEL_PRESTO = registerWithCategory("solid_fuel_presto", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SOLID_FUEL_PRESTO_TRIPLET = registerWithCategory("solid_fuel_presto_triplet", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SOLID_FUEL_BF = registerWithCategory("solid_fuel_bf", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SOLID_FUEL_PRESTO_BF = registerWithCategory("solid_fuel_presto_bf", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SOLID_FUEL_PRESTO_TRIPLET_BF = registerWithCategory("solid_fuel_presto_triplet_bf", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ROCKET_FUEL = registerWithCategory("rocket_fuel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COKE = registerWithCategory("coke", () -> new ItemEnumMulti(EnumCokeType.class, true, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> LIGNITE = registerWithCategory("lignite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BRIQUETTE = registerWithCategory("briquette", () -> new ItemEnumMulti(EnumBriquetteType.class, true, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LIGNITE = registerWithCategory("powder_lignite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COAL_INFERNAL = registerWithCategory("coal_infernal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CINNEBAR = registerWithCategory("cinnebar", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ASH = registerWithCategory("powder_ash", () -> new ItemEnumMulti(EnumAshType.class, true, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LIMESTONE = registerWithCategory("powder_limestone", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CEMENT = registerWithCategory("powder_cement", () -> new ItemLemon(2, 0.5f, false, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_GH336 = registerWithCategory("ingot_gh336", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_GH336 = registerWithCategory("nugget_gh336", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_AUSTRALIUM = registerWithCategory("ingot_australium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AUSTRALIUM = registerWithCategory("nugget_australium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AUSTRALIUM_LESSER = registerWithCategory("nugget_australium_lesser", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AUSTRALIUM_GREATER = registerWithCategory("nugget_australium_greater", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_TH232 = registerWithCategory("nugget_th232", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_URANIUM = registerWithCategory("nugget_uranium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_U233 = registerWithCategory("nugget_u233", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_U235 = registerWithCategory("nugget_u235", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_U238 = registerWithCategory("nugget_u238", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PLUTONIUM = registerWithCategory("nugget_plutonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PU238 = registerWithCategory("nugget_pu238", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PU239 = registerWithCategory("nugget_pu239", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PU240 = registerWithCategory("nugget_pu240", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PU241 = registerWithCategory("nugget_pu241", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PU_MIX = registerWithCategory("nugget_pu_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AM241 = registerWithCategory("nugget_am241", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AM242 = registerWithCategory("nugget_am242", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AM_MIX = registerWithCategory("nugget_am_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_NEPTUNIUM = registerWithCategory("nugget_neptunium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_POLONIUM = registerWithCategory("nugget_polonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_TECHNETIUM = registerWithCategory("nugget_technetium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_COBALT = registerWithCategory("nugget_cobalt", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_CO60 = registerWithCategory("nugget_co60", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_SR90 = registerWithCategory("nugget_sr90", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_AU198 = registerWithCategory("nugget_au198", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_PB209 = registerWithCategory("nugget_pb209", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_RA226 = registerWithCategory("nugget_ra226", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_ACTINIUM = registerWithCategory("nugget_actinium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_TITANIUM = registerWithCategory("plate_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_ALUMINUM = registerWithCategory("plate_aluminum", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NEUTRON_REFLECTOR = registerWithCategory("neutron_reflector", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_LEAD = registerWithCategory("nugget_lead", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_BISMUTH = registerWithCategory("ingot_bismuth", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_BISMUTH = registerWithCategory("nugget_bismuth", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_ARSENIC = registerWithCategory("ingot_arsenic", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_ARSENIC = registerWithCategory("nugget_arsenic", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_TANTALIUM = registerWithCategory("ingot_tantalium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_TANTALIUM = registerWithCategory("nugget_tantalium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_SILICON = registerWithCategory("ingot_silicon", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BILLET_SILICON = registerWithCategory("billet_silicon", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_SILICON = registerWithCategory("nugget_silicon", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_NIOBIUM = registerWithCategory("ingot_niobium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_NIOBIUM = registerWithCategory("nugget_niobium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_OSMIRIDIUM = registerWithCategory("ingot_osmiridium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_OSMIRIDIUM = registerWithCategory("nugget_osmiridium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_SCHRABIDIUM = registerWithCategory("nugget_schrabidium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_BERYLLIUM = registerWithCategory("nugget_beryllium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> HAZMAT_CLOTH = registerWithCategory("hazmat_cloth", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> HAZMAT_CLOTH_RED = registerWithCategory("hazmat_cloth_red", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> HAZMAT_CLOTH_GREY = registerWithCategory("hazmat_cloth_grey", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ASBESTOS_CLOTH = registerWithCategory("asbestos_cloth", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> RAG = registerWithCategory("rag", () -> new ItemRag(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> RAG_DAMP = registerWithCategory("rag_damp", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> RAG_PISS = registerWithCategory("rag_piss", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FILTER_COAL = registerWithCategory("filter_coal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_HES = registerWithCategory("ingot_hes", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_LES = registerWithCategory("ingot_les", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_HES = registerWithCategory("nugget_hes", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_LES = registerWithCategory("nugget_les", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_COMBINE_STEEL = registerWithCategory("plate_combine_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_COAL = registerWithCategory("crystal_coal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_IRON = registerWithCategory("crystal_iron", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_GOLD = registerWithCategory("crystal_gold", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_REDSTONE = registerWithCategory("crystal_redstone", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_LAPIS = registerWithCategory("crystal_lapis", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_DIAMOND = registerWithCategory("crystal_diamond", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_URANIUM = registerWithCategory("crystal_uranium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_THORIUM = registerWithCategory("crystal_thorium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_PLUTONIUM = registerWithCategory("crystal_plutonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_TITANIUM = registerWithCategory("crystal_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_SULFUR = registerWithCategory("crystal_sulfur", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_NITER = registerWithCategory("crystal_niter", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_COPPER = registerWithCategory("crystal_copper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_TUNGSTEN = registerWithCategory("crystal_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_ALUMINUM = registerWithCategory("crystal_aluminum", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_FLUORITE = registerWithCategory("crystal_fluorite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_BERYLLIUM = registerWithCategory("crystal_beryllium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_LEAD = registerWithCategory("crystal_lead", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_SCHRARANIUM = registerWithCategory("crystal_schraranium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_SCHRABIDIUM = registerWithCategory("crystal_schrabidium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_RARE = registerWithCategory("crystal_rare", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_PHOSPHORUS = registerWithCategory("crystal_phosphorus", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_LITHIUM = registerWithCategory("crystal_lithium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_COBALT = registerWithCategory("crystal_cobalt", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_STARMETAL = registerWithCategory("crystal_starmetal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_CINNEBAR = registerWithCategory("crystal_cinnebar", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_TRIXITE = registerWithCategory("crystal_trixite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_OSMIRIDIUM = registerWithCategory("crystal_osmiridium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> GEM_SODALITE = registerWithCategory("gem_sodalite", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> GEM_TANTALIUM = registerWithCategory("gem_tantalium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> GEM_VOLCANIC = registerWithCategory("gem_volcanic", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> GEM_RAD = registerWithCategory("gem_rad", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> GEM_ALEXANDRITE = registerWithCategory("gem_alexandrite", () -> new ItemAlexandrite(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LEAD = registerWithCategory("powder_lead", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_TANTALIUM = registerWithCategory("powder_tantalium", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_NEPTUNIUM = registerWithCategory("powder_neptunium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_POLONIUM = registerWithCategory("powder_polonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CO60 = registerWithCategory("powder_co60", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SR90 = registerWithCategory("powder_sr90", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SR90_TINY = registerWithCategory("powder_sr90_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_I131 = registerWithCategory("powder_i131", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_I131_TINY = registerWithCategory("powder_i131_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_XE135 = registerWithCategory("powder_xe135", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_XE135_TINY = registerWithCategory("powder_xe135_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CS137 = registerWithCategory("powder_cs137", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CS137_TINY = registerWithCategory("powder_cs137_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_AU198 = registerWithCategory("powder_au198", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_RA226 = registerWithCategory("powder_ra226", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_AT209 = registerWithCategory("powder_at209", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SCHRABIDIUM = registerWithCategory("powder_schrabidium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SCHRABIDATE = registerWithCategory("powder_schrabidate", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ALUMINUM = registerWithCategory("powder_aluminum", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BERYLLIUM = registerWithCategory("powder_beryllium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COPPER = registerWithCategory("powder_copper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_GOLD = registerWithCategory("powder_gold", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_IRON = registerWithCategory("powder_iron", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_TITANIUM = registerWithCategory("powder_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_TUNGSTEN = registerWithCategory("powder_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_URANIUM = registerWithCategory("powder_uranium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_PLUTONIUM = registerWithCategory("powder_plutonium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> DUST = registerWithCategory("dust", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> DUST_TINY = registerWithCategory("dust_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FALLOUT = registerWithCategory("fallout", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ADVANCED_ALLOY = registerWithCategory("powder_advanced_alloy", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_TCALLOY = registerWithCategory("powder_tcalloy", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COAL = registerWithCategory("powder_coal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COAL_TINY = registerWithCategory("powder_coal_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COMBINE_STEEL = registerWithCategory("powder_combine_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_DIAMOND = registerWithCategory("powder_diamond", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_EMERALD = registerWithCategory("powder_emerald", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LAPIS = registerWithCategory("powder_lapis", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_QUARTZ = registerWithCategory("powder_quartz", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_MAGNETIZED_TUNGSTEN = registerWithCategory("powder_magnetized_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CHLOROPHYTE = registerWithCategory("powder_chlorophyte", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_RED_COPPER = registerWithCategory("powder_red_copper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_STEEL = registerWithCategory("powder_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LITHIUM = registerWithCategory("powder_lithium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ZIRCONIUM = registerWithCategory("powder_zirconium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SODIUM = registerWithCategory("powder_sodium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_POWER = registerWithCategory("powder_power", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_IODINE = registerWithCategory("powder_iodine", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_THORIUM = registerWithCategory("powder_thorium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_NEODYMIUM = registerWithCategory("powder_neodymium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ASTATINE = registerWithCategory("powder_astatine", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CAESIUM = registerWithCategory("powder_caesium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_AUSTRALIUM = registerWithCategory("powder_australium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_STRONTIUM = registerWithCategory("powder_strontium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COBALT = registerWithCategory("powder_cobalt", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BROMINE = registerWithCategory("powder_bromine", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_NIOBIUM = registerWithCategory("powder_niobium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_TENNESSINE = registerWithCategory("powder_tennessine", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CERIUM = registerWithCategory("powder_cerium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_DURA_STEEL = registerWithCategory("powder_dura_steel", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_POLYMER = registerWithCategory("powder_polymer", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BAKELITE = registerWithCategory("powder_bakelite", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_EUPHEMIUM = registerWithCategory("powder_euphemium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_METEORITE = registerWithCategory("powder_meteorite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LANTHANIUM = registerWithCategory("powder_lanthanium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ACTINIUM = registerWithCategory("powder_actinium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BORON = registerWithCategory("powder_boron", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SEMTEX_MIX = registerWithCategory("powder_semtex_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_DESH_MIX = registerWithCategory("powder_desh_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_DESH_READY = registerWithCategory("powder_desh_ready", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_NITAN_MIX = registerWithCategory("powder_nitan_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SPARK_MIX = registerWithCategory("powder_spark_mix", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_DESH = registerWithCategory("powder_desh", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_STEEL_TINY = registerWithCategory("powder_steel_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LITHIUM_TINY = registerWithCategory("powder_lithium_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_NEODYMIUM_TINY = registerWithCategory("powder_neodymium_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COBALT_TINY = registerWithCategory("powder_cobalt_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_NIOBIUM_TINY = registerWithCategory("powder_niobium_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CERIUM_TINY = registerWithCategory("powder_cerium_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_LANTHANIUM_TINY = registerWithCategory("powder_lanthanium_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ACTINIUM_TINY = registerWithCategory("powder_actinium_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BORON_TINY = registerWithCategory("powder_boron_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_METEORITE_TINY = registerWithCategory("powder_meteorite_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_YELLOWCAKE = registerWithCategory("powder_yellowcake", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_MAGIC = registerWithCategory("powder_magic", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BALEFIRE = registerWithCategory("powder_balefire", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_SAWDUST = registerWithCategory("powder_sawdust", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_FLUX = registerWithCategory("powder_flux", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_FERTILIZER = registerWithCategory("powder_fertilizer", () -> new ItemFertilizer(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COLTAN_ORE = registerWithCategory("powder_coltan_ore", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_COLTAN = registerWithCategory("powder_coltan", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_TEKTITE = registerWithCategory("powder_tektite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_PALEOGENITE = registerWithCategory("powder_paleogenite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_PALEOGENITE_TINY = registerWithCategory("powder_paleogenite_tiny", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_IMPURE_OSMIRIDIUM = registerWithCategory("powder_impure_osmiridium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_BORAX = registerWithCategory("powder_borax", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_CHLOROCALCITE = registerWithCategory("powder_chlorocalcite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_MOLYSITE = registerWithCategory("powder_molysite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_NEODYMIUM = registerWithCategory("fragment_neodymium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_COBALT = registerWithCategory("fragment_cobalt", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_NIOBIUM = registerWithCategory("fragment_niobium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_CERIUM = registerWithCategory("fragment_cerium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_LANTHANIUM = registerWithCategory("fragment_lanthanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_ACTINIUM = registerWithCategory("fragment_actinium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_BORON = registerWithCategory("fragment_boron", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_METEORITE = registerWithCategory("fragment_meteorite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FRAGMENT_COLTAN = registerWithCategory("fragment_coltan", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHUNK_ORE = registerWithCategory("chunk_ore", () -> new ItemEnumMulti(EnumChunkType.class, true, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BIOMASS = registerWithCategory("biomass", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BIOMASS_COMPRESSED = registerWithCategory("biomass_compressed", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BIO_WAFER = registerWithCategory("bio_wafer", () -> new ItemLemon(4, 2F, false, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLANT_ITEM = registerWithCategory("plant_item", () -> new ItemEnumMulti(EnumPlantType.class, true, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_COPPER = registerWithCategory("coil_copper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_COPPER_TORUS = registerWithCategory("coil_copper_torus", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_TUNGSTEN = registerWithCategory("coil_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> TANK_STEEL = registerWithCategory("tank_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MOTOR = registerWithCategory("motor", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MOTOR_DESH = registerWithCategory("motor_desh", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MOTOR_BISMUTH = registerWithCategory("motor_bismuth", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CENTRIFUGE_ELEMENT = registerWithCategory("centrifuge_element", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> REACTOR_CORE = registerWithCategory("reactor_core", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> RTG_UNIT = registerWithCategory("rtg_unit", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> LEVITATION_UNIT = registerWithCategory("levitation_unit", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_MAGNETIZED_TUNGSTEN = registerWithCategory("coil_magnetized_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_GOLD = registerWithCategory("coil_gold", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COIL_GOLD_TORUS = registerWithCategory("coil_gold_torus", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MAGNET_CIRCULAR = registerWithCategory("magnet_circular", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COMPONENT_LIMITER = registerWithCategory("component_limiter", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COMPONENT_EMITTER = registerWithCategory("component_emitter", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHLORINE_PINWHEEL = registerWithCategory("chlorine_pinwheel", () -> new ItemInfiniteFluid(Fluids.CHLORINE, 1, 2, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> RING_STARMETAL = registerWithCategory("ring_starmetal", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FLYWHEEL_BERYLLIUM = registerWithCategory("flywheel_beryllium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> DEUTERIUM_FILTER = registerWithCategory("deuterium_filter", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PARTS_LEGENDARY = registerWithCategory("parts_legendary", () -> new ItemEnumMulti(EnumLegendaryType.class, false, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> GEAR_LARGE = registerWithCategory("gear_large", () -> new ItemGear(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAWBLADE = registerWithCategory("sawblade", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SHELL = registerWithCategory("shell", () -> new ItemAutogen(MaterialShapes.SHELL, new Item.Properties()).oun("shellntm"), ItemCategory.PARTS);
public static final RegistryObject<Item> PIPE = registerWithCategory("pipe", () -> new ItemAutogen(MaterialShapes.PIPE, new Item.Properties()).oun("pipentm"), ItemCategory.PARTS);
public static final RegistryObject<Item> FINS_FLAT = registerWithCategory("fins_flat", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FINS_SMALL_STEEL = registerWithCategory("fins_small_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FINS_BIG_STEEL = registerWithCategory("fins_big_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FINS_TRI_STEEL = registerWithCategory("fins_tri_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FINS_QUAD_TITANIUM = registerWithCategory("fins_quad_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SPHERE_STEEL = registerWithCategory("sphere_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PEDESTAL_STEEL = registerWithCategory("pedestal_steel", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> DYSFUNCTIONAL_REACTOR = registerWithCategory("dysfunctional_reactor", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BLADE_TITANIUM = registerWithCategory("blade_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> TURBINE_TITANIUM = registerWithCategory("turbine_titanium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BLADE_TUNGSTEN = registerWithCategory("blade_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> TURBINE_TUNGSTEN = registerWithCategory("turbine_tungsten", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> TOOTHPICKS = registerWithCategory("toothpicks", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> DUCTTAPE = registerWithCategory("ducttape", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CATALYST_CLAY = registerWithCategory("catalyst_clay", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_GENERIC_SMALL = registerWithCategory("warhead_generic_small", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_GENERIC_MEDIUM = registerWithCategory("warhead_generic_medium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_GENERIC_LARGE = registerWithCategory("warhead_generic_large", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_INCENDIARY_SMALL = registerWithCategory("warhead_incendiary_small", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_INCENDIARY_MEDIUM = registerWithCategory("warhead_incendiary_medium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_INCENDIARY_LARGE = registerWithCategory("warhead_incendiary_large", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_CLUSTER_SMALL = registerWithCategory("warhead_cluster_small", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_CLUSTER_MEDIUM = registerWithCategory("warhead_cluster_medium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_CLUSTER_LARGE = registerWithCategory("warhead_cluster_large", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_BUSTER_SMALL = registerWithCategory("warhead_buster_small", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_BUSTER_MEDIUM = registerWithCategory("warhead_buster_medium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_BUSTER_LARGE = registerWithCategory("warhead_buster_large", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_NUCLEAR = registerWithCategory("warhead_nuclear", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_MIRV = registerWithCategory("warhead_mirv", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WARHEAD_VOLCANO = registerWithCategory("warhead_volcano", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FUEL_TANK_SMALL = registerWithCategory("fuel_tank_small", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FUEL_TANK_MEDIUM = registerWithCategory("fuel_tank_medium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FUEL_TANK_LARGE = registerWithCategory("fuel_tank_large", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> THRUSTER_SMALL = registerWithCategory("thruster_small", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> THRUSTER_MEDIUM = registerWithCategory("thruster_medium", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> THRUSTER_LARGE = registerWithCategory("thruster_large", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAT_HEAD_MAPPER = registerWithCategory("sat_head_mapper", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAT_HEAD_SCANNER = registerWithCategory("sat_head_scanner", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAT_HEAD_RADAR = registerWithCategory("sat_head_radar", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAT_HEAD_LASER = registerWithCategory("sat_head_laser", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SAT_HEAD_RESONATOR = registerWithCategory("sat_head_resonator", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SEG_10 = registerWithCategory("seg_10", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SEG_15 = registerWithCategory("seg_15", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SEG_20 = registerWithCategory("seg_20", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHOPPER_HEAD = registerWithCategory("chopper_head", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHOPPER_GUN = registerWithCategory("chopper_gun", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHOPPER_TORSO = registerWithCategory("chopper_torso", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHOPPER_TAIL = registerWithCategory("chopper_tail", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHOPPER_WING = registerWithCategory("chopper_wing", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CHOPPER_BLADES = registerWithCategory("chopper_blades", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> COMBINE_SCRAP = registerWithCategory("combine_scrap", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SHIMMER_HEAD = registerWithCategory("shimmer_head", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SHIMMER_AXE_HEAD = registerWithCategory("shimmer_axe_head", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SHIMMER_HANDLE = registerWithCategory("shimmer_handle", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ENTANGLEMENT_KIT = registerWithCategory("entanglement_kit", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CIRCUIT = registerWithCategory("circuit", () -> new ItemCircuit(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRT_DISPLAY = registerWithCategory("crt_display", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CIRCUIT_STAR = registerWithCategory("circuit_star", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MECHANISM_REVOLVER_1 = registerWithCategory("mechanism_revolver_1", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MECHANISM_REVOLVER_2 = registerWithCategory("mechanism_revolver_2", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MECHANISM_RIFLE_1 = registerWithCategory("mechanism_rifle_1", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MECHANISM_RIFLE_2 = registerWithCategory("mechanism_rifle_2", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MECHANISM_LAUNCHER_1 = registerWithCategory("mechanism_launcher_1", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MECHANISM_LAUNCHER_2 = registerWithCategory("mechanism_launcher_2", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MECHANISM_SPECIAL = registerWithCategory("mechanism_special", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> ASSEMBLY_NUKE = registerWithCategory("assembly_nuke", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CASING = registerWithCategory("casing", () -> new ItemEnumMulti(ItemEnums.EnumCasingType.class, true, true, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WIRING_RED_COPPER = registerWithCategory("wiring_red_copper", () -> new ItemWiring(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PELLET_RTG_DEPLETED = registerWithCategory("pellet_rtg_depleted", () -> new ItemRTGPelletDepleted(new Item.Properties()).setContainerItem(plate_iron), ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_RADIUM = registerWithCategory("pellet_rtg_radium", () -> new ItemRTGPellet(3, new Item.Properties().stacksTo(1)).setDecays(DepletedRTGMaterial.LEAD, (long).getLifespan(16.0f, HalfLifeType.LONG, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_WEAK = registerWithCategory("pellet_rtg_weak", () -> new ItemRTGPellet(5, new Item.Properties().stacksTo(1)).setDecays(DepletedRTGMaterial.LEAD, (long).getLifespan(1.0f, HalfLifeType.LONG, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG = registerWithCategory("pellet_rtg", () -> new ItemRTGPellet(10, new Item.Properties().stacksTo(1)).setDecays(DepletedRTGMaterial.LEAD, (long).getLifespan(87.7f, HalfLifeType.MEDIUM, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_STRONTIUM = registerWithCategory("pellet_rtg_strontium", () -> new ItemRTGPellet(15, new Item.Properties()).setDecays(DepletedRTGMaterial.ZIRCONIUM, (long).getLifespan(29.0f, HalfLifeType.MEDIUM, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_COBALT = registerWithCategory("pellet_rtg_cobalt", () -> new ItemRTGPellet(15, new Item.Properties()).setDecays(DepletedRTGMaterial.NICKEL, (long).getLifespan(5.3f, HalfLifeType.MEDIUM, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_ACTINIUM = registerWithCategory("pellet_rtg_actinium", () -> new ItemRTGPellet(20, new Item.Properties()).setDecays(DepletedRTGMaterial.LEAD, (long).getLifespan(21.8f, HalfLifeType.MEDIUM, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_AMERICIUM = registerWithCategory("pellet_rtg_americium", () -> new ItemRTGPellet(20, new Item.Properties().stacksTo(1)).setDecays(DepletedRTGMaterial.NEPTUNIUM, (long).getLifespan(4.7f, HalfLifeType.LONG, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_POLONIUM = registerWithCategory("pellet_rtg_polonium", () -> new ItemRTGPellet(50, new Item.Properties().stacksTo(1)).setDecays(DepletedRTGMaterial.LEAD, (long).getLifespan(138.0f, HalfLifeType.SHORT, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_GOLD = registerWithCategory("pellet_rtg_gold", () -> new ItemRTGPellet(VersatileConfig.rtgDecay(, new Item.Properties().stacksTo(1)).setDecays(DepletedRTGMaterial.MERCURY, (long).getLifespan(2.7f, HalfLifeType.SHORT, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_RTG_LEAD = registerWithCategory("pellet_rtg_lead", () -> new ItemRTGPellet(VersatileConfig.rtgDecay(, new Item.Properties()).setDecays(DepletedRTGMaterial.BISMUTH, (long).getLifespan(0.3f, HalfLifeType.SHORT, false).5, ItemCategory.CONTROL);
public static final RegistryObject<Item> TRITIUM_DEUTERIUM_CAKE = registerWithCategory("tritium_deuterium_cake", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> PISTON_SELENIUM = registerWithCategory("piston_selenium", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PISTON_SET = registerWithCategory("piston_set", () -> new ItemPistons(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> DRILLBIT = registerWithCategory("drillbit", () -> new ItemDrillbit(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> RUNE_BLANK = registerWithCategory("rune_blank", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setEffect(), ItemCategory.PARTS);
public static final RegistryObject<Item> RUNE_ISA = registerWithCategory("rune_isa", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setEffect(), ItemCategory.PARTS);
public static final RegistryObject<Item> RUNE_DAGAZ = registerWithCategory("rune_dagaz", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setEffect(), ItemCategory.PARTS);
public static final RegistryObject<Item> RUNE_HAGALAZ = registerWithCategory("rune_hagalaz", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setEffect(), ItemCategory.PARTS);
public static final RegistryObject<Item> RUNE_JERA = registerWithCategory("rune_jera", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setEffect(), ItemCategory.PARTS);
public static final RegistryObject<Item> RUNE_THURISAZ = registerWithCategory("rune_thurisaz", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setEffect(), ItemCategory.PARTS);
public static final RegistryObject<Item> AMS_CATALYST_BLANK = registerWithCategory("ams_catalyst_blank", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_ALUMINUM = registerWithCategory("ams_catalyst_aluminum", () -> new ItemCatalyst(0xCCCCCC, 1000000, 1.15f, 	0.85f, 	1.15f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_BERYLLIUM = registerWithCategory("ams_catalyst_beryllium", () -> new ItemCatalyst(0x97978B, 0, 		1.25f, 	0.95f, 	1.05f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_CAESIUM = registerWithCategory("ams_catalyst_caesium", () -> new ItemCatalyst(0x6400FF, 2500000, 1.00f, 	0.85f, 	1.15f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_CERIUM = registerWithCategory("ams_catalyst_cerium", () -> new ItemCatalyst(0x1D3FFF, 1000000, 1.15f, 	1.15f, 	0.85f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_COBALT = registerWithCategory("ams_catalyst_cobalt", () -> new ItemCatalyst(0x789BBE, 0, 		1.25f, 	1.05f, 	0.95f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_COPPER = registerWithCategory("ams_catalyst_copper", () -> new ItemCatalyst(0xAADE29, 0, 		1.25f, 	1.00f, 	1.00f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_DINEUTRONIUM = registerWithCategory("ams_catalyst_dineutronium", () -> new ItemCatalyst(0x334077, 2500000, 1.00f, 	1.15f, 	0.85f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_EUPHEMIUM = registerWithCategory("ams_catalyst_euphemium", () -> new ItemCatalyst(0xFF9CD2, 2500000, 1.00f, 	1.00f, 	1.00f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_IRON = registerWithCategory("ams_catalyst_iron", () -> new ItemCatalyst(0xFF7E22, 1000000, 1.15f, 	0.95f, 	1.05f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_LITHIUM = registerWithCategory("ams_catalyst_lithium", () -> new ItemCatalyst(0xFF2727, 0, 		1.25f, 	0.85f, 	1.15f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_NIOBIUM = registerWithCategory("ams_catalyst_niobium", () -> new ItemCatalyst(0x3BF1B6, 1000000, 1.15f, 	1.05f, 	0.95f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_SCHRABIDIUM = registerWithCategory("ams_catalyst_schrabidium", () -> new ItemCatalyst(0x32FFFF, 2500000, 1.00f, 	1.05f, 	0.95f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_STRONTIUM = registerWithCategory("ams_catalyst_strontium", () -> new ItemCatalyst(0xDD0D35, 1000000, 1.15f, 	1.00f, 	1.00f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_THORIUM = registerWithCategory("ams_catalyst_thorium", () -> new ItemCatalyst(0x653B22, 2500000, 1.00f, 	0.95f, 	1.05f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CATALYST_TUNGSTEN = registerWithCategory("ams_catalyst_tungsten", () -> new ItemCatalyst(0xF5FF48, 0, 		1.25f, 	1.15f, 	0.85f, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_EMPTY = registerWithCategory("cell_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_UF6 = registerWithCategory("cell_uf6", () -> new Item(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_PUF6 = registerWithCategory("cell_puf6", () -> new Item(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_ANTIMATTER = registerWithCategory("cell_antimatter", () -> new ItemDrop(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_DEUTERIUM = registerWithCategory("cell_deuterium", () -> new Item(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_TRITIUM = registerWithCategory("cell_tritium", () -> new Item(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_SAS3 = registerWithCategory("cell_sas3", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.rare).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_ANTI_SCHRABIDIUM = registerWithCategory("cell_anti_schrabidium", () -> new ItemDrop(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CELL_BALEFIRE = registerWithCategory("cell_balefire", () -> new Item(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> DEMON_CORE_OPEN = registerWithCategory("demon_core_open", () -> new ItemDemonCore(new Item.Properties()), ItemCategory.NUKE);
public static final RegistryObject<Item> DEMON_CORE_CLOSED = registerWithCategory("demon_core_closed", () -> new Item(new Item.Properties()), ItemCategory.NUKE);
public static final RegistryObject<Item> PA_COIL = registerWithCategory("pa_coil", () -> new ItemPACoil(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_EMPTY = registerWithCategory("particle_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_HYDROGEN = registerWithCategory("particle_hydrogen", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_COPPER = registerWithCategory("particle_copper", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_LEAD = registerWithCategory("particle_lead", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_APROTON = registerWithCategory("particle_aproton", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_AELECTRON = registerWithCategory("particle_aelectron", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_AMAT = registerWithCategory("particle_amat", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_ASCHRAB = registerWithCategory("particle_aschrab", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_HIGGS = registerWithCategory("particle_higgs", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_MUON = registerWithCategory("particle_muon", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_TACHYON = registerWithCategory("particle_tachyon", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_STRANGE = registerWithCategory("particle_strange", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_DARK = registerWithCategory("particle_dark", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_SPARKTICLE = registerWithCategory("particle_sparkticle", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_DIGAMMA = registerWithCategory("particle_digamma", () -> new ItemDigamma(60, new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> PARTICLE_LUTECE = registerWithCategory("particle_lutece", () -> new Item(new Item.Properties()).setContainerItem(ModItems.particle_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> SINGULARITY_MICRO = registerWithCategory("singularity_micro", () -> new ItemDrop(new Item.Properties()).setContainerItem(ModItems.nuclear_waste), ItemCategory.CONTROL);
public static final RegistryObject<Item> SINGULARITY = registerWithCategory("singularity", () -> new ItemDrop(new Item.Properties().stacksTo(1)).setContainerItem(ModItems.nuclear_waste), ItemCategory.CONTROL);
public static final RegistryObject<Item> SINGULARITY_COUNTER_RESONANT = registerWithCategory("singularity_counter_resonant", () -> new ItemDrop(new Item.Properties().stacksTo(1)).setContainerItem(ModItems.nuclear_waste), ItemCategory.CONTROL);
public static final RegistryObject<Item> SINGULARITY_SUPER_HEATED = registerWithCategory("singularity_super_heated", () -> new ItemDrop(new Item.Properties().stacksTo(1)).setContainerItem(ModItems.nuclear_waste), ItemCategory.CONTROL);
public static final RegistryObject<Item> BLACK_HOLE = registerWithCategory("black_hole", () -> new ItemDrop(new Item.Properties().stacksTo(1)).setContainerItem(ModItems.nuclear_waste), ItemCategory.CONTROL);
public static final RegistryObject<Item> SINGULARITY_SPARK = registerWithCategory("singularity_spark", () -> new ItemDrop(new Item.Properties().stacksTo(1)).setContainerItem(ModItems.nuclear_waste), ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_ANTIMATTER = registerWithCategory("pellet_antimatter", () -> new ItemDrop(new Item.Properties()).setContainerItem(ModItems.cell_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CRYSTAL_XEN = registerWithCategory("crystal_xen", () -> new ItemDrop(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STONE_FLAT = registerWithCategory("stamp_stone_flat", () -> new ItemStamp(32, StampType.FLAT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STONE_PLATE = registerWithCategory("stamp_stone_plate", () -> new ItemStamp(32, StampType.PLATE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STONE_WIRE = registerWithCategory("stamp_stone_wire", () -> new ItemStamp(32, StampType.WIRE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STONE_CIRCUIT = registerWithCategory("stamp_stone_circuit", () -> new ItemStamp(32, StampType.CIRCUIT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_IRON_FLAT = registerWithCategory("stamp_iron_flat", () -> new ItemStamp(64, StampType.FLAT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_IRON_PLATE = registerWithCategory("stamp_iron_plate", () -> new ItemStamp(64, StampType.PLATE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_IRON_WIRE = registerWithCategory("stamp_iron_wire", () -> new ItemStamp(64, StampType.WIRE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_IRON_CIRCUIT = registerWithCategory("stamp_iron_circuit", () -> new ItemStamp(64, StampType.CIRCUIT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STEEL_FLAT = registerWithCategory("stamp_steel_flat", () -> new ItemStamp(192, StampType.FLAT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STEEL_PLATE = registerWithCategory("stamp_steel_plate", () -> new ItemStamp(192, StampType.PLATE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STEEL_WIRE = registerWithCategory("stamp_steel_wire", () -> new ItemStamp(192, StampType.WIRE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_STEEL_CIRCUIT = registerWithCategory("stamp_steel_circuit", () -> new ItemStamp(192, StampType.CIRCUIT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_TITANIUM_FLAT = registerWithCategory("stamp_titanium_flat", () -> new ItemStamp(256, StampType.FLAT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_TITANIUM_PLATE = registerWithCategory("stamp_titanium_plate", () -> new ItemStamp(256, StampType.PLATE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_TITANIUM_WIRE = registerWithCategory("stamp_titanium_wire", () -> new ItemStamp(256, StampType.WIRE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_TITANIUM_CIRCUIT = registerWithCategory("stamp_titanium_circuit", () -> new ItemStamp(256, StampType.CIRCUIT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_OBSIDIAN_FLAT = registerWithCategory("stamp_obsidian_flat", () -> new ItemStamp(512, StampType.FLAT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_OBSIDIAN_PLATE = registerWithCategory("stamp_obsidian_plate", () -> new ItemStamp(512, StampType.PLATE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_OBSIDIAN_WIRE = registerWithCategory("stamp_obsidian_wire", () -> new ItemStamp(512, StampType.WIRE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_OBSIDIAN_CIRCUIT = registerWithCategory("stamp_obsidian_circuit", () -> new ItemStamp(512, StampType.CIRCUIT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_DESH_FLAT = registerWithCategory("stamp_desh_flat", () -> new ItemStamp(0, StampType.FLAT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_DESH_PLATE = registerWithCategory("stamp_desh_plate", () -> new ItemStamp(0, StampType.PLATE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_DESH_WIRE = registerWithCategory("stamp_desh_wire", () -> new ItemStamp(0, StampType.WIRE, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_DESH_CIRCUIT = registerWithCategory("stamp_desh_circuit", () -> new ItemStamp(0, StampType.CIRCUIT, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_357 = registerWithCategory("stamp_357", () -> new ItemStamp(1000, StampType.C357, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_44 = registerWithCategory("stamp_44", () -> new ItemStamp(1000, StampType.C44, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_9 = registerWithCategory("stamp_9", () -> new ItemStamp(1000, StampType.C9, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_50 = registerWithCategory("stamp_50", () -> new ItemStamp(1000, StampType.C50, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_BOOK = registerWithCategory("stamp_book", () -> new ItemStampBook(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STAMP_DESH_357 = registerWithCategory("stamp_desh_357", () -> new ItemStamp(0, StampType.C357, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_DESH_44 = registerWithCategory("stamp_desh_44", () -> new ItemStamp(0, StampType.C44, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_DESH_9 = registerWithCategory("stamp_desh_9", () -> new ItemStamp(0, StampType.C9, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> STAMP_DESH_50 = registerWithCategory("stamp_desh_50", () -> new ItemStamp(0, StampType.C50, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BLADES_STEEL = registerWithCategory("blades_steel", () -> new ItemBlades(200, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BLADES_TITANIUM = registerWithCategory("blades_titanium", () -> new ItemBlades(350, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BLADES_ADVANCED_ALLOY = registerWithCategory("blades_advanced_alloy", () -> new ItemBlades(700, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BLADES_DESH = registerWithCategory("blades_desh", () -> new ItemBlades(0, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> MOLD_BASE = registerWithCategory("mold_base", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> MOLD = registerWithCategory("mold", () -> new ItemMold(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> SCRAPS = registerWithCategory("scraps", () -> new ItemScraps(new Item.Properties()).aot(Mats.MAT_BISMUTH, "scraps_bismuth"), ItemCategory.PARTS);
public static final RegistryObject<Item> INGOT_RAW = registerWithCategory("ingot_raw", () -> new ItemAutogen(MaterialShapes.INGOT, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_CAST = registerWithCategory("plate_cast", () -> new ItemAutogen(MaterialShapes.CASTPLATE, new Item.Properties()).aot(Mats.MAT_BISMUTH, "plate_cast_bismuth"), ItemCategory.PARTS);
public static final RegistryObject<Item> PLATE_WELDED = registerWithCategory("plate_welded", () -> new ItemAutogen(MaterialShapes.WELDEDPLATE, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> HEAVY_COMPONENT = registerWithCategory("heavy_component", () -> new ItemAutogen(MaterialShapes.HEAVY_COMPONENT, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WIRE_FINE = registerWithCategory("wire_fine", () -> new ItemAutogen(MaterialShapes.WIRE, new Item.Properties()).aot(Mats.MAT_ALUMINIUM, "wire_aluminium").aot(Mats.MAT_COPPER, "wire_copper").aot(Mats.MAT_MINGRADE, "wire_red_copper").aot(Mats.MAT_GOLD, "wire_gold").aot(Mats.MAT_TUNGSTEN, "wire_tungsten").aot(Mats.MAT_ALLOY, "wire_advanced_alloy").aot(Mats.MAT_CARBON, "wire_carbon").aot(Mats.MAT_SCHRABIDIUM, "wire_schrabidium").aot(Mats.MAT_MAGTUNG, "wire_magnetized_tungsten"), ItemCategory.PARTS);
public static final RegistryObject<Item> WIRE_DENSE = registerWithCategory("wire_dense", () -> new ItemAutogen(MaterialShapes.DENSEWIRE, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_BARREL_LIGHT = registerWithCategory("part_barrel_light", () -> new ItemAutogen(MaterialShapes.LIGHTBARREL, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_BARREL_HEAVY = registerWithCategory("part_barrel_heavy", () -> new ItemAutogen(MaterialShapes.HEAVYBARREL, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_RECEIVER_LIGHT = registerWithCategory("part_receiver_light", () -> new ItemAutogen(MaterialShapes.LIGHTRECEIVER, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_RECEIVER_HEAVY = registerWithCategory("part_receiver_heavy", () -> new ItemAutogen(MaterialShapes.HEAVYRECEIVER, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_MECHANISM = registerWithCategory("part_mechanism", () -> new ItemAutogen(MaterialShapes.MECHANISM, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_STOCK = registerWithCategory("part_stock", () -> new ItemAutogen(MaterialShapes.STOCK, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_GRIP = registerWithCategory("part_grip", () -> new ItemAutogen(MaterialShapes.GRIP, new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PART_LITHIUM = registerWithCategory("part_lithium", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PART_BERYLLIUM = registerWithCategory("part_beryllium", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PART_CARBON = registerWithCategory("part_carbon", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PART_COPPER = registerWithCategory("part_copper", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PART_PLUTONIUM = registerWithCategory("part_plutonium", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> LASER_CRYSTAL_CO2 = registerWithCategory("laser_crystal_co2", () -> new ItemFELCrystal(EnumWavelengths.IR, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> LASER_CRYSTAL_BISMUTH = registerWithCategory("laser_crystal_bismuth", () -> new ItemFELCrystal(EnumWavelengths.VISIBLE, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> LASER_CRYSTAL_CMB = registerWithCategory("laser_crystal_cmb", () -> new ItemFELCrystal(EnumWavelengths.UV, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> LASER_CRYSTAL_DNT = registerWithCategory("laser_crystal_dnt", () -> new ItemFELCrystal(EnumWavelengths.GAMMA, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> LASER_CRYSTAL_DIGAMMA = registerWithCategory("laser_crystal_digamma", () -> new ItemFELCrystal(EnumWavelengths.DRX, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> THERMO_ELEMENT = registerWithCategory("thermo_element", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> CATALYTIC_CONVERTER = registerWithCategory("catalytic_converter", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FUEL_ADDITIVE = registerWithCategory("fuel_additive", () -> new ItemEnumMulti(ItemEnums.EnumFuelAdditive.class, true, true, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> CANISTER_EMPTY = registerWithCategory("canister_empty", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> CANISTER_FULL = registerWithCategory("canister_full", () -> new ItemCanister(new Item.Properties()).setContainerItem(ModItems.canister_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> CANISTER_NAPALM = registerWithCategory("canister_napalm", () -> new ItemCustomLore(new Item.Properties()).setContainerItem(ModItems.canister_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> GAS_EMPTY = registerWithCategory("gas_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> GAS_FULL = registerWithCategory("gas_full", () -> new ItemGasTank(new Item.Properties()).setContainerItem(ModItems.gas_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> SYRINGE_EMPTY = registerWithCategory("syringe_empty", () -> new Item(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_ANTIDOTE = registerWithCategory("syringe_antidote", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_POISON = registerWithCategory("syringe_poison", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_AWESOME = registerWithCategory("syringe_awesome", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_METAL_EMPTY = registerWithCategory("syringe_metal_empty", () -> new Item(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_METAL_STIMPAK = registerWithCategory("syringe_metal_stimpak", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_METAL_MEDX = registerWithCategory("syringe_metal_medx", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_METAL_PSYCHO = registerWithCategory("syringe_metal_psycho", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_METAL_SUPER = registerWithCategory("syringe_metal_super", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_TAINT = registerWithCategory("syringe_taint", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SYRINGE_MKUNICORN = registerWithCategory("syringe_mkunicorn", () -> new ItemSyringe(new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> IV_EMPTY = registerWithCategory("iv_empty", () -> new ItemSimpleConsumable(new Item.Properties()).setUseActionServer((stack, user).hurtResistantTime.giveSoundAndDecrement(stack, user, "hbm:item.syringe", new ItemStack(ModItems.iv_blood), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> IV_BLOOD = registerWithCategory("iv_blood", () -> new ItemSimpleConsumable(new Item.Properties()).setUseActionServer((stack, user).giveSoundAndDecrement(stack, user, "hbm:item.radaway", new ItemStack(ModItems.iv_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> IV_XP_EMPTY = registerWithCategory("iv_xp_empty", () -> new ItemSimpleConsumable(new Item.Properties()).setUseActionServer((stack, user).getTotalExperience(user).giveSoundAndDecrement(stack, user, "hbm:item.syringe", new ItemStack(ModItems.iv_xp), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> IV_XP = registerWithCategory("iv_xp", () -> new ItemSimpleConsumable(new Item.Properties()).setUseActionServer((stack, user).giveSoundAndDecrement(stack, user, "random.orb", new ItemStack(ModItems.iv_xp_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RADAWAY = registerWithCategory("radaway", () -> new ItemSimpleConsumable(new Item.Properties()).setUseActionServer((stack, user).giveSoundAndDecrement(stack, user, "hbm:item.radaway", new ItemStack(ModItems.iv_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RADAWAY_STRONG = registerWithCategory("radaway_strong", () -> new ItemSimpleConsumable(new Item.Properties()).setUseActionServer((stack, user).giveSoundAndDecrement(stack, user, "hbm:item.radaway", new ItemStack(ModItems.iv_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RADAWAY_FLUSH = registerWithCategory("radaway_flush", () -> new ItemSimpleConsumable(new Item.Properties()).setUseActionServer((stack, user).giveSoundAndDecrement(stack, user, "hbm:item.radaway", new ItemStack(ModItems.iv_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MED_BAG = registerWithCategory("med_bag", () -> new ItemSyringe(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> RADX = registerWithCategory("radx", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SIOX = registerWithCategory("siox", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PILL_HERBAL = registerWithCategory("pill_herbal", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> XANAX = registerWithCategory("xanax", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> FMN = registerWithCategory("fmn", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> FIVE_HTP = registerWithCategory("five_htp", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PILL_IODINE = registerWithCategory("pill_iodine", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PLAN_C = registerWithCategory("plan_c", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PILL_RED = registerWithCategory("pill_red", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> STEALTH_BOY = registerWithCategory("stealth_boy", () -> new ItemStarterKit(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GAS_MASK_FILTER = registerWithCategory("gas_mask_filter", () -> new ItemFilter(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK_FILTER_MONO = registerWithCategory("gas_mask_filter_mono", () -> new ItemFilter(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK_FILTER_COMBO = registerWithCategory("gas_mask_filter_combo", () -> new ItemFilter(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK_FILTER_RAG = registerWithCategory("gas_mask_filter_rag", () -> new ItemFilter(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK_FILTER_PISS = registerWithCategory("gas_mask_filter_piss", () -> new ItemFilter(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JETPACK_TANK = registerWithCategory("jetpack_tank", () -> new ItemSyringe(new Item.Properties().stacksTo(16)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GUN_KIT_1 = registerWithCategory("gun_kit_1", () -> new ItemRepairKit(10, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GUN_KIT_2 = registerWithCategory("gun_kit_2", () -> new ItemRepairKit(100, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CBT_DEVICE = registerWithCategory("cbt_device", () -> new ItemSyringe(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CIGARETTE = registerWithCategory("cigarette", () -> new ItemCigarette(new Item.Properties().stacksTo(16)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CRACKPIPE = registerWithCategory("crackpipe", () -> new ItemCigarette(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> BDCL = registerWithCategory("bdcl", () -> new ItemBDCL(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> ATTACHMENT_MASK = registerWithCategory("attachment_mask", () -> new ItemModGasmask(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ATTACHMENT_MASK_MONO = registerWithCategory("attachment_mask_mono", () -> new ItemModGasmask(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BACK_TESLA = registerWithCategory("back_tesla", () -> new ItemModTesla(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SERVO_SET = registerWithCategory("servo_set", () -> new ItemModServos(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SERVO_SET_DESH = registerWithCategory("servo_set_desh", () -> new ItemModServos(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PADS_RUBBER = registerWithCategory("pads_rubber", () -> new ItemModPads(0.5f, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PADS_SLIME = registerWithCategory("pads_slime", () -> new ItemModPads(0.25f, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PADS_STATIC = registerWithCategory("pads_static", () -> new ItemModPads(0.75f, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLADDING_PAINT = registerWithCategory("cladding_paint", () -> new ItemModCladding(0.025, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLADDING_RUBBER = registerWithCategory("cladding_rubber", () -> new ItemModCladding(0.005, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLADDING_LEAD = registerWithCategory("cladding_lead", () -> new ItemModCladding(0.1, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLADDING_DESH = registerWithCategory("cladding_desh", () -> new ItemModCladding(0.2, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLADDING_GHIORSIUM = registerWithCategory("cladding_ghiorsium", () -> new ItemModCladding(0.5, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLADDING_IRON = registerWithCategory("cladding_iron", () -> new ItemModIron(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLADDING_OBSIDIAN = registerWithCategory("cladding_obsidian", () -> new ItemModObsidian(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_KEVLAR = registerWithCategory("insert_kevlar", () -> new ItemModInsert(1500, 1F, 0.9f, 1F, 1F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_SAPI = registerWithCategory("insert_sapi", () -> new ItemModInsert(1750, 1F, 0.85f, 1F, 1F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_ESAPI = registerWithCategory("insert_esapi", () -> new ItemModInsert(2000, 0.95f, 0.8f, 1F, 1F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_XSAPI = registerWithCategory("insert_xsapi", () -> new ItemModInsert(2500, 0.9f, 0.75f, 1F, 1F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_STEEL = registerWithCategory("insert_steel", () -> new ItemModInsert(1000, 1F, 0.95f, 0.75f, 0.95f, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_DU = registerWithCategory("insert_du", () -> new ItemModInsert(1500, 0.9f, 0.85f, 0.5f, 0.9f, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_POLONIUM = registerWithCategory("insert_polonium", () -> new ItemModInsert(500, 0.9f, 1F, 0.95f, 0.9f, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_GHIORSIUM = registerWithCategory("insert_ghiorsium", () -> new ItemModInsert(2000, 0.8f, 0.75f, 0.35f, 0.9f, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_ERA = registerWithCategory("insert_era", () -> new ItemModInsert(25, 0.5f, 1F, 0.25f, 1F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_YHARONITE = registerWithCategory("insert_yharonite", () -> new ItemModInsert(9999, 0.01f, 1F, 1F, 1F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INSERT_DOXIUM = registerWithCategory("insert_doxium", () -> new ItemModInsert(9999, 5.0f, 1F, 1F, 1F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ARMOR_POLISH = registerWithCategory("armor_polish", () -> new ItemModPolish(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BANDAID = registerWithCategory("bandaid", () -> new ItemModBandaid(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SERUM = registerWithCategory("serum", () -> new ItemModSerum(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> QUARTZ_PLUTONIUM = registerWithCategory("quartz_plutonium", () -> new ItemModQuartz(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MORNING_GLORY = registerWithCategory("morning_glory", () -> new ItemModMorningGlory(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> LODESTONE = registerWithCategory("lodestone", () -> new ItemModLodestone(5, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HORSESHOE_MAGNET = registerWithCategory("horseshoe_magnet", () -> new ItemModLodestone(8, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INDUSTRIAL_MAGNET = registerWithCategory("industrial_magnet", () -> new ItemModLodestone(12, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BATHWATER = registerWithCategory("bathwater", () -> new ItemModBathwater(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BATHWATER_MK2 = registerWithCategory("bathwater_mk2", () -> new ItemModBathwater(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SPIDER_MILK = registerWithCategory("spider_milk", () -> new ItemModMilk(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INK = registerWithCategory("ink", () -> new ItemModInk(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEART_PIECE = registerWithCategory("heart_piece", () -> new ItemModHealth(5F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEART_CONTAINER = registerWithCategory("heart_container", () -> new ItemModHealth(20F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEART_BOOSTER = registerWithCategory("heart_booster", () -> new ItemModHealth(40F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEART_FAB = registerWithCategory("heart_fab", () -> new ItemModHealth(60F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BLACK_DIAMOND = registerWithCategory("black_diamond", () -> new ItemModHealth(40F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WD40 = registerWithCategory("wd40", () -> new ItemModWD40(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCRUMPY = registerWithCategory("scrumpy", () -> new ItemModRevive(1, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WILD_P = registerWithCategory("wild_p", () -> new ItemModRevive(3, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FABSOLS_VODKA = registerWithCategory("fabsols_vodka", () -> new ItemModRevive(9999, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SHACKLES = registerWithCategory("shackles", () -> new ItemModShackles(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INJECTOR_5HTP = registerWithCategory("injector_5htp", () -> new ItemModAuto(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> INJECTOR_KNIFE = registerWithCategory("injector_knife", () -> new ItemModKnife(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MEDAL_LIQUIDATOR = registerWithCategory("medal_liquidator", () -> new ItemModMedal(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLED_CLOUD = registerWithCategory("bottled_cloud", () -> new ItemModCloud(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PROTECTION_CHARM = registerWithCategory("protection_charm", () -> new ItemModCharm(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEOR_CHARM = registerWithCategory("meteor_charm", () -> new ItemModCharm(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> NEUTRINO_LENS = registerWithCategory("neutrino_lens", () -> new ItemModLens(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_TESTER = registerWithCategory("gas_tester", () -> new ItemModSensor(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DEFUSER_GOLD = registerWithCategory("defuser_gold", () -> new ItemModDefuser(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BALLISTIC_GAUNTLET = registerWithCategory("ballistic_gauntlet", () -> new ItemModTwoKick(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> NIGHT_VISION = registerWithCategory("night_vision", () -> new ItemModNightVision(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CARD_AOS = registerWithCategory("card_aos", () -> new ItemModCard(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CARD_QOS = registerWithCategory("card_qos", () -> new ItemModCard(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AUSTRALIUM_III = registerWithCategory("australium_iii", () -> new ItemModShield(25F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ARMOR_BATTERY = registerWithCategory("armor_battery", () -> new ItemModBattery(1.25D, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ARMOR_BATTERY_MK2 = registerWithCategory("armor_battery_mk2", () -> new ItemModBattery(1.5D, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ARMOR_BATTERY_MK3 = registerWithCategory("armor_battery_mk3", () -> new ItemModBattery(2D, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAP_NUKA = registerWithCategory("cap_nuka", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAP_QUANTUM = registerWithCategory("cap_quantum", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAP_SPARKLE = registerWithCategory("cap_sparkle", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAP_RAD = registerWithCategory("cap_rad", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAP_KORL = registerWithCategory("cap_korl", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAP_FRITZ = registerWithCategory("cap_fritz", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> RING_PULL = registerWithCategory("ring_pull", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAN_EMPTY = registerWithCategory("can_empty", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAN_SMART = registerWithCategory("can_smart", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_CREATURE = registerWithCategory("can_creature", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_REDBOMB = registerWithCategory("can_redbomb", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_MRSUGAR = registerWithCategory("can_mrsugar", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_OVERCHARGE = registerWithCategory("can_overcharge", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_LUNA = registerWithCategory("can_luna", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_BEPIS = registerWithCategory("can_bepis", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_BREEN = registerWithCategory("can_breen", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAN_MUG = registerWithCategory("can_mug", () -> new ItemEnergy(new Item.Properties()).makeCan(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE_EMPTY = registerWithCategory("bottle_empty", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE_NUKA = registerWithCategory("bottle_nuka", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle_empty, cap_nuka), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE_CHERRY = registerWithCategory("bottle_cherry", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle_empty, cap_nuka).setContainerItem(ModItems.bottle_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE_QUANTUM = registerWithCategory("bottle_quantum", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle_empty, cap_quantum).setContainerItem(ModItems.bottle_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE_SPARKLE = registerWithCategory("bottle_sparkle", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle_empty, cap_sparkle).setContainerItem(ModItems.bottle_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE_RAD = registerWithCategory("bottle_rad", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle_empty, cap_rad).setContainerItem(ModItems.bottle_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE2_EMPTY = registerWithCategory("bottle2_empty", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE2_KORL = registerWithCategory("bottle2_korl", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle2_empty, cap_korl).setContainerItem(ModItems.bottle2_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE2_FRITZ = registerWithCategory("bottle2_fritz", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle2_empty, cap_fritz).setContainerItem(ModItems.bottle2_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE2_KORL_SPECIAL = registerWithCategory("bottle2_korl_special", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle2_empty, cap_korl).setContainerItem(ModItems.bottle2_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE2_FRITZ_SPECIAL = registerWithCategory("bottle2_fritz_special", () -> new ItemEnergy(new Item.Properties()).makeBottle(bottle2_empty, cap_fritz).setContainerItem(ModItems.bottle2_empty), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FLASK_INFUSION = registerWithCategory("flask_infusion", () -> new ItemFlask(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CHOCOLATE_MILK = registerWithCategory("chocolate_milk", () -> new ItemEnergy(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COFFEE = registerWithCategory("coffee", () -> new ItemEnergy(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COFFEE_RADIUM = registerWithCategory("coffee_radium", () -> new ItemEnergy(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHOCOLATE = registerWithCategory("chocolate", () -> new ItemPill(0, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAN_KEY = registerWithCategory("can_key", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> BOAT_RUBBER = registerWithCategory("boat_rubber", () -> new ItemBoatRubber(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CART = registerWithCategory("cart", () -> new ItemModMinecart(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TRAIN = registerWithCategory("train", () -> new ItemTrain(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DRONE = registerWithCategory("drone", () -> new ItemDrone(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COIN_CREEPER = registerWithCategory("coin_creeper", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> COIN_RADIATION = registerWithCategory("coin_radiation", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> COIN_MASKMAN = registerWithCategory("coin_maskman", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> COIN_WORM = registerWithCategory("coin_worm", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> COIN_UFO = registerWithCategory("coin_ufo", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.uncommon), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> ROD_EMPTY = registerWithCategory("rod_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_DUAL_EMPTY = registerWithCategory("rod_dual_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_QUAD_EMPTY = registerWithCategory("rod_quad_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_EMPTY = registerWithCategory("rod_zirnox_empty", () -> new Item(new Item.Properties().stacksTo(64)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_NATURAL_URANIUM_FUEL = registerWithCategory("rod_zirnox_natural_uranium_fuel", () -> new ItemZirnoxRodDeprecated(250000, 30, new Item.Properties().stacksTo(1)).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_URANIUM_FUEL = registerWithCategory("rod_zirnox_uranium_fuel", () -> new ItemZirnoxRodDeprecated(200000, 50, new Item.Properties().stacksTo(1)).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_TH232 = registerWithCategory("rod_zirnox_th232", () -> new ItemZirnoxBreedingRod(20000, 0, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_THORIUM_FUEL = registerWithCategory("rod_zirnox_thorium_fuel", () -> new ItemZirnoxRodDeprecated(200000, 40, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_MOX_FUEL = registerWithCategory("rod_zirnox_mox_fuel", () -> new ItemZirnoxRodDeprecated(165000, 75, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_PLUTONIUM_FUEL = registerWithCategory("rod_zirnox_plutonium_fuel", () -> new ItemZirnoxRodDeprecated(175000, 65, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_U233_FUEL = registerWithCategory("rod_zirnox_u233_fuel", () -> new ItemZirnoxRodDeprecated(150000, 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_U235_FUEL = registerWithCategory("rod_zirnox_u235_fuel", () -> new ItemZirnoxRodDeprecated(165000, 85, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_LES_FUEL = registerWithCategory("rod_zirnox_les_fuel", () -> new ItemZirnoxRodDeprecated(150000, 150, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_LITHIUM = registerWithCategory("rod_zirnox_lithium", () -> new ItemZirnoxBreedingRod(20000, 0, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_TRITIUM = registerWithCategory("rod_zirnox_tritium", () -> new Item(new Item.Properties().stacksTo(1)).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_ZFB_MOX = registerWithCategory("rod_zirnox_zfb_mox", () -> new ItemZirnoxRodDeprecated(50000, 35, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_NATURAL_URANIUM_FUEL_DEPLETED = registerWithCategory("rod_zirnox_natural_uranium_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_URANIUM_FUEL_DEPLETED = registerWithCategory("rod_zirnox_uranium_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_THORIUM_FUEL_DEPLETED = registerWithCategory("rod_zirnox_thorium_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_MOX_FUEL_DEPLETED = registerWithCategory("rod_zirnox_mox_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_PLUTONIUM_FUEL_DEPLETED = registerWithCategory("rod_zirnox_plutonium_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_U233_FUEL_DEPLETED = registerWithCategory("rod_zirnox_u233_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_U235_FUEL_DEPLETED = registerWithCategory("rod_zirnox_u235_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_LES_FUEL_DEPLETED = registerWithCategory("rod_zirnox_les_fuel_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> ROD_ZIRNOX_ZFB_MOX_DEPLETED = registerWithCategory("rod_zirnox_zfb_mox_depleted", () -> new Item(new Item.Properties()).setContainerItem(ModItems.rod_zirnox_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> WASTE_NATURAL_URANIUM = registerWithCategory("waste_natural_uranium", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_URANIUM = registerWithCategory("waste_uranium", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_THORIUM = registerWithCategory("waste_thorium", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_MOX = registerWithCategory("waste_mox", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLUTONIUM = registerWithCategory("waste_plutonium", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_U233 = registerWithCategory("waste_u233", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_U235 = registerWithCategory("waste_u235", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_SCHRABIDIUM = registerWithCategory("waste_schrabidium", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_ZFB_MOX = registerWithCategory("waste_zfb_mox", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLATE_U233 = registerWithCategory("waste_plate_u233", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLATE_U235 = registerWithCategory("waste_plate_u235", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLATE_MOX = registerWithCategory("waste_plate_mox", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLATE_PU239 = registerWithCategory("waste_plate_pu239", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLATE_SA326 = registerWithCategory("waste_plate_sa326", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLATE_RA226BE = registerWithCategory("waste_plate_ra226be", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> WASTE_PLATE_PU238BE = registerWithCategory("waste_plate_pu238be", () -> new ItemDepletedFuel(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PILE_ROD_URANIUM = registerWithCategory("pile_rod_uranium", () -> new ItemPileRod(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PILE_ROD_PU239 = registerWithCategory("pile_rod_pu239", () -> new ItemPileRod(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PILE_ROD_PLUTONIUM = registerWithCategory("pile_rod_plutonium", () -> new ItemPileRod(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PILE_ROD_SOURCE = registerWithCategory("pile_rod_source", () -> new ItemPileRod(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PILE_ROD_BORON = registerWithCategory("pile_rod_boron", () -> new ItemPileRod(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PILE_ROD_LITHIUM = registerWithCategory("pile_rod_lithium", () -> new ItemPileRod(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PILE_ROD_DETECTOR = registerWithCategory("pile_rod_detector", () -> new ItemPileRod(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PLATE_FUEL_U233 = registerWithCategory("plate_fuel_u233", () -> new ItemPlateFuel(2200000, new Item.Properties().stacksTo(1)).setFunction(FunctionEnum.SQUARE_ROOT, 50), ItemCategory.CONTROL);
public static final RegistryObject<Item> PLATE_FUEL_U235 = registerWithCategory("plate_fuel_u235", () -> new ItemPlateFuel(2200000, new Item.Properties().stacksTo(1)).setFunction(FunctionEnum.SQUARE_ROOT, 40), ItemCategory.CONTROL);
public static final RegistryObject<Item> PLATE_FUEL_MOX = registerWithCategory("plate_fuel_mox", () -> new ItemPlateFuel(2400000, new Item.Properties().stacksTo(1)).setFunction(FunctionEnum.LOGARITHM, 50), ItemCategory.CONTROL);
public static final RegistryObject<Item> PLATE_FUEL_PU239 = registerWithCategory("plate_fuel_pu239", () -> new ItemPlateFuel(2000000, new Item.Properties().stacksTo(1)).setFunction(FunctionEnum.NEGATIVE_QUADRATIC, 50), ItemCategory.CONTROL);
public static final RegistryObject<Item> PLATE_FUEL_SA326 = registerWithCategory("plate_fuel_sa326", () -> new ItemPlateFuel(2000000, new Item.Properties().stacksTo(1)).setFunction(FunctionEnum.LINEAR, 80), ItemCategory.CONTROL);
public static final RegistryObject<Item> PLATE_FUEL_RA226BE = registerWithCategory("plate_fuel_ra226be", () -> new ItemPlateFuel(1300000, new Item.Properties().stacksTo(1)).setFunction(FunctionEnum.PASSIVE, 30), ItemCategory.CONTROL);
public static final RegistryObject<Item> PLATE_FUEL_PU238BE = registerWithCategory("plate_fuel_pu238be", () -> new ItemPlateFuel(1000000, new Item.Properties().stacksTo(1)).setFunction(FunctionEnum.PASSIVE, 50), ItemCategory.CONTROL);
public static final RegistryObject<Item> PWR_FUEL = registerWithCategory("pwr_fuel", () -> new ItemPWRFuel(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PWR_FUEL_HOT = registerWithCategory("pwr_fuel_hot", () -> new ItemEnumMulti(EnumPWRFuel.class, true, false, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PWR_FUEL_DEPLETED = registerWithCategory("pwr_fuel_depleted", () -> new ItemEnumMulti(EnumPWRFuel.class, true, false, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> RBMK_LID = registerWithCategory("rbmk_lid", () -> new ItemRBMKLid(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> RBMK_LID_GLASS = registerWithCategory("rbmk_lid_glass", () -> new ItemRBMKLid(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> RBMK_FUEL_EMPTY = registerWithCategory("rbmk_fuel_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> WATZ_PELLET = registerWithCategory("watz_pellet", () -> new ItemWatzPellet(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WATZ_PELLET_DEPLETED = registerWithCategory("watz_pellet_depleted", () -> new ItemWatzPellet(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ICF_PELLET_EMPTY = registerWithCategory("icf_pellet_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> ICF_PELLET = registerWithCategory("icf_pellet", () -> new ItemICFPellet(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> ICF_PELLET_DEPLETED = registerWithCategory("icf_pellet_depleted", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> TRINITITE = registerWithCategory("trinitite", () -> new ItemNuclearWaste(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_LONG = registerWithCategory("nuclear_waste_long", () -> new ItemWasteLong(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_LONG_TINY = registerWithCategory("nuclear_waste_long_tiny", () -> new ItemWasteLong(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_SHORT = registerWithCategory("nuclear_waste_short", () -> new ItemWasteShort(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_SHORT_TINY = registerWithCategory("nuclear_waste_short_tiny", () -> new ItemWasteShort(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_LONG_DEPLETED = registerWithCategory("nuclear_waste_long_depleted", () -> new ItemWasteLong(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_LONG_DEPLETED_TINY = registerWithCategory("nuclear_waste_long_depleted_tiny", () -> new ItemWasteLong(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_SHORT_DEPLETED = registerWithCategory("nuclear_waste_short_depleted", () -> new ItemWasteShort(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_SHORT_DEPLETED_TINY = registerWithCategory("nuclear_waste_short_depleted_tiny", () -> new ItemWasteShort(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE = registerWithCategory("nuclear_waste", () -> new ItemNuclearWaste(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_TINY = registerWithCategory("nuclear_waste_tiny", () -> new ItemNuclearWaste(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_VITRIFIED = registerWithCategory("nuclear_waste_vitrified", () -> new ItemNuclearWaste(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> NUCLEAR_WASTE_VITRIFIED_TINY = registerWithCategory("nuclear_waste_vitrified_tiny", () -> new ItemNuclearWaste(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SCRAP_PLASTIC = registerWithCategory("scrap_plastic", () -> new ItemPlasticScrap(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCRAP = registerWithCategory("scrap", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SCRAP_OIL = registerWithCategory("scrap_oil", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> SCRAP_NUCLEAR = registerWithCategory("scrap_nuclear", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CONTAINMENT_BOX = registerWithCategory("containment_box", () -> new ItemLeadBox(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PLASTIC_BAG = registerWithCategory("plastic_bag", () -> new ItemPlasticBag(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CASING_BAG = registerWithCategory("casing_bag", () -> new ItemCasingBag(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> DEBRIS_GRAPHITE = registerWithCategory("debris_graphite", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> DEBRIS_METAL = registerWithCategory("debris_metal", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> DEBRIS_FUEL = registerWithCategory("debris_fuel", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> DEBRIS_CONCRETE = registerWithCategory("debris_concrete", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> DEBRIS_EXCHANGER = registerWithCategory("debris_exchanger", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> DEBRIS_SHRAPNEL = registerWithCategory("debris_shrapnel", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> DEBRIS_ELEMENT = registerWithCategory("debris_element", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> PELLET_CLUSTER = registerWithCategory("pellet_cluster", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_FIRE = registerWithCategory("powder_fire", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_ICE = registerWithCategory("powder_ice", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_POISON = registerWithCategory("powder_poison", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> POWDER_THERMITE = registerWithCategory("powder_thermite", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CORDITE = registerWithCategory("cordite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BALLISTITE = registerWithCategory("ballistite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BALL_DYNAMITE = registerWithCategory("ball_dynamite", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BALL_TNT = registerWithCategory("ball_tnt", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BALL_TATB = registerWithCategory("ball_tatb", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BALL_FIRECLAY = registerWithCategory("ball_fireclay", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PELLET_GAS = registerWithCategory("pellet_gas", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> MAGNETRON = registerWithCategory("magnetron", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PELLET_BUCKSHOT = registerWithCategory("pellet_buckshot", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> PELLET_CHARGED = registerWithCategory("pellet_charged", () -> new Item(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> DESIGNATOR = registerWithCategory("designator", () -> new ItemDesingator(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> DESIGNATOR_RANGE = registerWithCategory("designator_range", () -> new ItemDesingatorRange(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.MISSILE);
public static final RegistryObject<Item> DESIGNATOR_MANUAL = registerWithCategory("designator_manual", () -> new ItemDesingatorManual(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> DESIGNATOR_ARTY_RANGE = registerWithCategory("designator_arty_range", () -> new ItemDesignatorArtyRange(new Item.Properties()), ItemCategory.MISSILE);
public static final RegistryObject<Item> LAUNCH_CODE_PIECE = registerWithCategory("launch_code_piece", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.PARTS);
public static final RegistryObject<Item> LAUNCH_CODE = registerWithCategory("launch_code", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.PARTS);
public static final RegistryObject<Item> LAUNCH_KEY = registerWithCategory("launch_key", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.PARTS);
public static final RegistryObject<Item> MISSILE_ASSEMBLY = registerWithCategory("missile_assembly", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.PARTS);
public static final RegistryObject<Item> MISSILE_GENERIC = registerWithCategory("missile_generic", () -> new ItemMissile(MissileFormFactor.V2, MissileTier.TIER1, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_ANTI_BALLISTIC = registerWithCategory("missile_anti_ballistic", () -> new ItemMissile(MissileFormFactor.ABM, MissileTier.TIER1, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_INCENDIARY = registerWithCategory("missile_incendiary", () -> new ItemMissile(MissileFormFactor.V2, MissileTier.TIER1, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_CLUSTER = registerWithCategory("missile_cluster", () -> new ItemMissile(MissileFormFactor.V2, MissileTier.TIER1, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_BUSTER = registerWithCategory("missile_buster", () -> new ItemMissile(MissileFormFactor.V2, MissileTier.TIER1, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_DECOY = registerWithCategory("missile_decoy", () -> new ItemMissile(MissileFormFactor.V2, MissileTier.TIER1, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_STRONG = registerWithCategory("missile_strong", () -> new ItemMissile(MissileFormFactor.STRONG, MissileTier.TIER2, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_INCENDIARY_STRONG = registerWithCategory("missile_incendiary_strong", () -> new ItemMissile(MissileFormFactor.STRONG, MissileTier.TIER2, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_CLUSTER_STRONG = registerWithCategory("missile_cluster_strong", () -> new ItemMissile(MissileFormFactor.STRONG, MissileTier.TIER2, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_BUSTER_STRONG = registerWithCategory("missile_buster_strong", () -> new ItemMissile(MissileFormFactor.STRONG, MissileTier.TIER2, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_EMP_STRONG = registerWithCategory("missile_emp_strong", () -> new ItemMissile(MissileFormFactor.STRONG, MissileTier.TIER2, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_BURST = registerWithCategory("missile_burst", () -> new ItemMissile(MissileFormFactor.HUGE, MissileTier.TIER3, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_INFERNO = registerWithCategory("missile_inferno", () -> new ItemMissile(MissileFormFactor.HUGE, MissileTier.TIER3, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_RAIN = registerWithCategory("missile_rain", () -> new ItemMissile(MissileFormFactor.HUGE, MissileTier.TIER3, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_DRILL = registerWithCategory("missile_drill", () -> new ItemMissile(MissileFormFactor.HUGE, MissileTier.TIER3, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_NUCLEAR = registerWithCategory("missile_nuclear", () -> new ItemMissile(MissileFormFactor.ATLAS, MissileTier.TIER4, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_NUCLEAR_CLUSTER = registerWithCategory("missile_nuclear_cluster", () -> new ItemMissile(MissileFormFactor.ATLAS, MissileTier.TIER4, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_VOLCANO = registerWithCategory("missile_volcano", () -> new ItemMissile(MissileFormFactor.ATLAS, MissileTier.TIER4, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_DOOMSDAY = registerWithCategory("missile_doomsday", () -> new ItemMissile(MissileFormFactor.ATLAS, MissileTier.TIER4, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_DOOMSDAY_RUSTED = registerWithCategory("missile_doomsday_rusted", () -> new ItemMissile(MissileFormFactor.ATLAS, MissileTier.TIER4, new Item.Properties().stacksTo(1)).notLaunchable(), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_TAINT = registerWithCategory("missile_taint", () -> new ItemMissile(MissileFormFactor.MICRO, MissileTier.TIER0, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_MICRO = registerWithCategory("missile_micro", () -> new ItemMissile(MissileFormFactor.MICRO, MissileTier.TIER0, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_BHOLE = registerWithCategory("missile_bhole", () -> new ItemMissile(MissileFormFactor.MICRO, MissileTier.TIER0, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SCHRABIDIUM = registerWithCategory("missile_schrabidium", () -> new ItemMissile(MissileFormFactor.MICRO, MissileTier.TIER0, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_EMP = registerWithCategory("missile_emp", () -> new ItemMissile(MissileFormFactor.MICRO, MissileTier.TIER0, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SHUTTLE = registerWithCategory("missile_shuttle", () -> new ItemMissile(MissileFormFactor.OTHER, MissileTier.TIER3, MissileFuel.KEROSENE_PEROXIDE, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_STEALTH = registerWithCategory("missile_stealth", () -> new ItemMissile(MissileFormFactor.STRONG, MissileTier.TIER1, new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_TEST = registerWithCategory("missile_test", () -> new ItemMissile(MissileFormFactor.MICRO, MissileTier.TIER0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MISSILE_SOYUZ = registerWithCategory("missile_soyuz", () -> new ItemSoyuz(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SOYUZ_LANDER = registerWithCategory("missile_soyuz_lander", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_CUSTOM = registerWithCategory("missile_custom", () -> new ItemCustomMissile(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SAT_MAPPER = registerWithCategory("sat_mapper", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_SCANNER = registerWithCategory("sat_scanner", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_RADAR = registerWithCategory("sat_radar", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_LASER = registerWithCategory("sat_laser", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_FOEQ = registerWithCategory("sat_foeq", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_RESONATOR = registerWithCategory("sat_resonator", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_MINER = registerWithCategory("sat_miner", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_LUNAR_MINER = registerWithCategory("sat_lunar_miner", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_GERALD = registerWithCategory("sat_gerald", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_CHIP = registerWithCategory("sat_chip", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_INTERFACE = registerWithCategory("sat_interface", () -> new ItemSatInterface(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_COORD = registerWithCategory("sat_coord", () -> new ItemSatInterface(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_DESIGNATOR = registerWithCategory("sat_designator", () -> new ItemSatDesignator(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.MISSILE);
public static final RegistryObject<Item> SAT_RELAY = registerWithCategory("sat_relay", () -> new ItemSatChip(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_THRUSTER_10_KEROSENE = registerWithCategory("mp_thruster_10_kerosene", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 1.5f, PartSize.SIZE_10).setHealth(10F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_10_KEROSENE_TEC = registerWithCategory("mp_thruster_10_kerosene_tec", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 1.5f, PartSize.SIZE_10).setHealth(15F).setRarity(Rarity.COMMON), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_10_SOLID = registerWithCategory("mp_thruster_10_solid", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.SOLID, 1F, 1.5f, PartSize.SIZE_10).setHealth(15F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_10_XENON = registerWithCategory("mp_thruster_10_xenon", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.XENON, 1F, 1.5f, PartSize.SIZE_10).setHealth(5F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_KEROSENE = registerWithCategory("mp_thruster_15_kerosene", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 7.5f, PartSize.SIZE_15).setHealth(15F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_KEROSENE_TEC = registerWithCategory("mp_thruster_15_kerosene_tec", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 7.5f, PartSize.SIZE_15).setHealth(20F).setRarity(Rarity.COMMON), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_KEROSENE_DUAL = registerWithCategory("mp_thruster_15_kerosene_dual", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 2.5f, PartSize.SIZE_15).setHealth(15F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_KEROSENE_TRIPLE = registerWithCategory("mp_thruster_15_kerosene_triple", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 5F, PartSize.SIZE_15).setHealth(15F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_SOLID = registerWithCategory("mp_thruster_15_solid", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.SOLID, 1F, 5F, PartSize.SIZE_15).setHealth(20F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_SOLID_HEXDECUPLE = registerWithCategory("mp_thruster_15_solid_hexdecuple", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.SOLID, 1F, 5F, PartSize.SIZE_15).setHealth(25F).setRarity(Rarity.UNCOMMON), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_HYDROGEN = registerWithCategory("mp_thruster_15_hydrogen", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.HYDROGEN, 1F, 7.5f, PartSize.SIZE_15).setHealth(20F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_HYDROGEN_DUAL = registerWithCategory("mp_thruster_15_hydrogen_dual", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.HYDROGEN, 1F, 2.5f, PartSize.SIZE_15).setHealth(15F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_BALEFIRE_SHORT = registerWithCategory("mp_thruster_15_balefire_short", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.BALEFIRE, 1F, 5F, PartSize.SIZE_15).setHealth(25F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_BALEFIRE = registerWithCategory("mp_thruster_15_balefire", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.BALEFIRE, 1F, 5F, PartSize.SIZE_15).setHealth(25F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_BALEFIRE_LARGE = registerWithCategory("mp_thruster_15_balefire_large", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.BALEFIRE, 1F, 7.5f, PartSize.SIZE_15).setHealth(35F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_15_BALEFIRE_LARGE_RAD = registerWithCategory("mp_thruster_15_balefire_large_rad", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.BALEFIRE, 1F, 7.5f, PartSize.SIZE_15).setAuthor("The Master").setHealth(35F).setRarity(Rarity.UNCOMMON), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_20_KEROSENE = registerWithCategory("mp_thruster_20_kerosene", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 100F, PartSize.SIZE_20).setHealth(30F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_20_KEROSENE_DUAL = registerWithCategory("mp_thruster_20_kerosene_dual", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 100F, PartSize.SIZE_20).setHealth(30F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_20_KEROSENE_TRIPLE = registerWithCategory("mp_thruster_20_kerosene_triple", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.KEROSENE, 1F, 100F, PartSize.SIZE_20).setHealth(30F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_20_SOLID = registerWithCategory("mp_thruster_20_solid", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.SOLID, 1F, 100F, PartSize.SIZE_20).setHealth(35F).setWittyText("It's basically just a big hole at the end of the fuel tank."), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_20_SOLID_MULTI = registerWithCategory("mp_thruster_20_solid_multi", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.SOLID, 1F, 100F, PartSize.SIZE_20).setHealth(35F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_THRUSTER_20_SOLID_MULTIER = registerWithCategory("mp_thruster_20_solid_multier", () -> new ItemCustomMissilePart(new Item.Properties()).makeThruster(FuelType.SOLID, 1F, 100F, PartSize.SIZE_20).setHealth(35F).setWittyText("Did I miscount? Hope not."), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_STABILITY_10_FLAT = registerWithCategory("mp_stability_10_flat", () -> new ItemCustomMissilePart(new Item.Properties()).makeStability(0.5f, PartSize.SIZE_10).setHealth(10F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_STABILITY_10_CRUISE = registerWithCategory("mp_stability_10_cruise", () -> new ItemCustomMissilePart(new Item.Properties()).makeStability(0.25f, PartSize.SIZE_10).setHealth(5F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_STABILITY_10_SPACE = registerWithCategory("mp_stability_10_space", () -> new ItemCustomMissilePart(new Item.Properties()).makeStability(0.35f, PartSize.SIZE_10).setHealth(5F).setRarity(Rarity.COMMON).setWittyText("Standing there alone, the ship is waiting / All systems are go, are you sure?"), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_STABILITY_15_FLAT = registerWithCategory("mp_stability_15_flat", () -> new ItemCustomMissilePart(new Item.Properties()).makeStability(0.5f, PartSize.SIZE_15).setHealth(10F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_STABILITY_15_THIN = registerWithCategory("mp_stability_15_thin", () -> new ItemCustomMissilePart(new Item.Properties()).makeStability(0.35f, PartSize.SIZE_15).setHealth(5F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_STABILITY_15_SOYUZ = registerWithCategory("mp_stability_15_soyuz", () -> new ItemCustomMissilePart(new Item.Properties()).makeStability(0.25f, PartSize.SIZE_15).setHealth(15F).setRarity(Rarity.COMMON).setWittyText("Союз!"), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_S_20 = registerWithCategory("mp_s_20", () -> new ItemCustomMissilePart(new Item.Properties()).makeStability(0.5f, PartSize.SIZE_20), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_KEROSENE = registerWithCategory("mp_fuselage_10_kerosene", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.KEROSENE, 2500F, PartSize.SIZE_10, PartSize.SIZE_10).setAuthor("Hoboy").setHealth(20F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_SOLID = registerWithCategory("mp_fuselage_10_solid", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.SOLID, 2500F, PartSize.SIZE_10, PartSize.SIZE_10).setHealth(25F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_XENON = registerWithCategory("mp_fuselage_10_xenon", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.XENON, 5000F, PartSize.SIZE_10, PartSize.SIZE_10).setHealth(20F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_LONG_KEROSENE = registerWithCategory("mp_fuselage_10_long_kerosene", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.KEROSENE, 5000F, PartSize.SIZE_10, PartSize.SIZE_10).setAuthor("Hoboy").setHealth(30F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_LONG_SOLID = registerWithCategory("mp_fuselage_10_long_solid", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.SOLID, 5000F, PartSize.SIZE_10, PartSize.SIZE_10).setHealth(35F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_15_KEROSENE = registerWithCategory("mp_fuselage_10_15_kerosene", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.KEROSENE, 10000F, PartSize.SIZE_10, PartSize.SIZE_15).setHealth(40F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_15_SOLID = registerWithCategory("mp_fuselage_10_15_solid", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.SOLID, 10000F, PartSize.SIZE_10, PartSize.SIZE_15).setHealth(40F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_15_HYDROGEN = registerWithCategory("mp_fuselage_10_15_hydrogen", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.HYDROGEN, 10000F, PartSize.SIZE_10, PartSize.SIZE_15).setHealth(40F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_10_15_BALEFIRE = registerWithCategory("mp_fuselage_10_15_balefire", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.BALEFIRE, 10000F, PartSize.SIZE_10, PartSize.SIZE_15).setHealth(40F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_15_KEROSENE = registerWithCategory("mp_fuselage_15_kerosene", () -> new ItemCustomMissilePart(new Item.Properties()).makeFuselage(FuelType.KEROSENE, 15000F, PartSize.SIZE_15, PartSize.SIZE_15).setAuthor("Hoboy").setHealth(50F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MP_FUSELAGE_15_SOLID = registerWithCategory("mp_fuselage_15_solid", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeFuselage(FuelType.SOLID, 15000F, PartSize.SIZE_15, PartSize.SIZE_15).setHealth(60F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_FUSELAGE_15_HYDROGEN = registerWithCategory("mp_fuselage_15_hydrogen", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeFuselage(FuelType.HYDROGEN, 15000F, PartSize.SIZE_15, PartSize.SIZE_15).setHealth(50F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_FUSELAGE_15_BALEFIRE = registerWithCategory("mp_fuselage_15_balefire", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeFuselage(FuelType.BALEFIRE, 15000F, PartSize.SIZE_15, PartSize.SIZE_15).setHealth(75F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_FUSELAGE_15_20_KEROSENE = registerWithCategory("mp_fuselage_15_20_kerosene", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeFuselage(FuelType.KEROSENE, 20000, PartSize.SIZE_15, PartSize.SIZE_20).setAuthor("Hoboy").setHealth(70F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_FUSELAGE_15_20_SOLID = registerWithCategory("mp_fuselage_15_20_solid", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeFuselage(FuelType.SOLID, 20000, PartSize.SIZE_15, PartSize.SIZE_20).setHealth(70F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_F_20 = registerWithCategory("mp_f_20", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeFuselage(FuelType.KEROSENE, 1000F, PartSize.SIZE_20, PartSize.SIZE_20), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_10_HE = registerWithCategory("mp_warhead_10_he", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.HE, 15F, 1.5f, PartSize.SIZE_10).setHealth(5F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_10_INCENDIARY = registerWithCategory("mp_warhead_10_incendiary", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.INC, 15F, 1.5f, PartSize.SIZE_10).setHealth(5F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_10_BUSTER = registerWithCategory("mp_warhead_10_buster", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.BUSTER, 5F, 1.5f, PartSize.SIZE_10).setHealth(5F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_10_NUCLEAR = registerWithCategory("mp_warhead_10_nuclear", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.NUCLEAR, 35F, 1.5f, PartSize.SIZE_10).setTitle("Tater Tot").setHealth(10F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_10_NUCLEAR_LARGE = registerWithCategory("mp_warhead_10_nuclear_large", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.NUCLEAR, 75F, 2.5f, PartSize.SIZE_10).setTitle("Chernobyl Boris").setHealth(15F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_10_TAINT = registerWithCategory("mp_warhead_10_taint", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.TAINT, 15F, 1.5f, PartSize.SIZE_10).setHealth(20F).setRarity(Rarity.UNCOMMON).setWittyText("Eat my taint! Bureaucracy is dead and we killed it!"), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_10_CLOUD = registerWithCategory("mp_warhead_10_cloud", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.CLOUD, 15F, 1.5f, PartSize.SIZE_10).setHealth(20F).setRarity(Rarity.RARE), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_15_HE = registerWithCategory("mp_warhead_15_he", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.HE, 50F, 2.5f, PartSize.SIZE_15).setHealth(10F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_15_INCENDIARY = registerWithCategory("mp_warhead_15_incendiary", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.INC, 35F, 2.5f, PartSize.SIZE_15).setHealth(10F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_15_NUCLEAR = registerWithCategory("mp_warhead_15_nuclear", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.NUCLEAR, 125F, 5F, PartSize.SIZE_15).setTitle("Auntie Bertha").setHealth(15F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_15_BOXCAR = registerWithCategory("mp_warhead_15_boxcar", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.TX, 250F, 7.5f, PartSize.SIZE_15).setWittyText("?!?!").setHealth(35F).setRarity(Rarity.LEGENDARY), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_15_N2 = registerWithCategory("mp_warhead_15_n2", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.N2, 100F, 5F, PartSize.SIZE_15).setWittyText("[screams geometrically]").setHealth(20F).setRarity(Rarity.RARE), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_15_BALEFIRE = registerWithCategory("mp_warhead_15_balefire", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.BALEFIRE, 100F, 7.5f, PartSize.SIZE_15).setRarity(Rarity.LEGENDARY).setAuthor("VT-6/24").setHealth(15F).setWittyText("Hightower, never forgetti."), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_WARHEAD_15_TURBINE = registerWithCategory("mp_warhead_15_turbine", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.TURBINE, 200F, 5F, PartSize.SIZE_15).setRarity(Rarity.SEWS_CLOTHES_AND_SUCKS_HORSE_COCK).setHealth(250F), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_W_20 = registerWithCategory("mp_w_20", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeWarhead(WarheadType.HE, 15F, 1F, PartSize.SIZE_20), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_C_1 = registerWithCategory("mp_c_1", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeChip(0.1f), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_C_2 = registerWithCategory("mp_c_2", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeChip(0.05f), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_C_3 = registerWithCategory("mp_c_3", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeChip(0.01f), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_C_4 = registerWithCategory("mp_c_4", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeChip(0.005f), ItemCategory.MISSILE);
public static final RegistryObject<Item> MP_C_5 = registerWithCategory("mp_c_5", () -> new ItemCustomMissilePart(new Item.Properties().stacksTo(1)).makeChip(0.0f), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_CAMO = registerWithCategory("missile_skin_camo", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_DESERT = registerWithCategory("missile_skin_desert", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_FLAMES = registerWithCategory("missile_skin_flames", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_MANLY_PINK = registerWithCategory("missile_skin_manly_pink", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_ORANGE_INSULATION = registerWithCategory("missile_skin_orange_insulation", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_SLEEK = registerWithCategory("missile_skin_sleek", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_SOVIET_GLORY = registerWithCategory("missile_skin_soviet_glory", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_SOVIET_STANK = registerWithCategory("missile_skin_soviet_stank", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> MISSILE_SKIN_METAL = registerWithCategory("missile_skin_metal", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> AMMO_DGK = registerWithCategory("ammo_dgk", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> AMMO_MISC = registerWithCategory("ammo_misc", () -> new ItemAmmo(AmmoMisc.class, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AMMO_ARTY = registerWithCategory("ammo_arty", () -> new ItemAmmoArty(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AMMO_HIMARS = registerWithCategory("ammo_himars", () -> new ItemAmmoHIMARS(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GUN_B92_AMMO = registerWithCategory("gun_b92_ammo", () -> new GunB92Cell(new Item.Properties().stacksTo(1)), ItemCategory.WEAPON);
public static final RegistryObject<Item> GUN_B92 = registerWithCategory("gun_b92", () -> new GunB92(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GUN_CRYOLATOR_AMMO = registerWithCategory("gun_cryolator_ammo", () -> new Item(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GUN_CRYOCANNON = registerWithCategory("gun_cryocannon", () -> new ItemCryoCannon(GunEnergyFactory.getCryoCannonConfig(, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GUN_FIREEXT = registerWithCategory("gun_fireext", () -> new ItemGunBase(GunEnergyFactory.getExtConfig(, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> CRUCIBLE = registerWithCategory("crucible", () -> new ItemCrucible(5000, 1F, matCrucible, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> STICK_DYNAMITE = registerWithCategory("stick_dynamite", () -> new ItemGrenade(3, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> STICK_DYNAMITE_FISHING = registerWithCategory("stick_dynamite_fishing", () -> new ItemGrenadeFishing(3, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> STICK_TNT = registerWithCategory("stick_tnt", () -> new Item(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> STICK_SEMTEX = registerWithCategory("stick_semtex", () -> new Item(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> STICK_C4 = registerWithCategory("stick_c4", () -> new Item(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_GENERIC = registerWithCategory("grenade_generic", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_STRONG = registerWithCategory("grenade_strong", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_FRAG = registerWithCategory("grenade_frag", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_FIRE = registerWithCategory("grenade_fire", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_SHRAPNEL = registerWithCategory("grenade_shrapnel", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_CLUSTER = registerWithCategory("grenade_cluster", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_FLARE = registerWithCategory("grenade_flare", () -> new ItemGrenade(0, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_ELECTRIC = registerWithCategory("grenade_electric", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_POISON = registerWithCategory("grenade_poison", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_GAS = registerWithCategory("grenade_gas", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_PULSE = registerWithCategory("grenade_pulse", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_PLASMA = registerWithCategory("grenade_plasma", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_TAU = registerWithCategory("grenade_tau", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_SCHRABIDIUM = registerWithCategory("grenade_schrabidium", () -> new ItemGrenade(7, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_LEMON = registerWithCategory("grenade_lemon", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_GASCAN = registerWithCategory("grenade_gascan", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_KYIV = registerWithCategory("grenade_kyiv", () -> new ItemGrenadeKyiv(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_MK2 = registerWithCategory("grenade_mk2", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_ASCHRAB = registerWithCategory("grenade_aschrab", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_NUKE = registerWithCategory("grenade_nuke", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_NUCLEAR = registerWithCategory("grenade_nuclear", () -> new ItemGrenade(7, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_ZOMG = registerWithCategory("grenade_zomg", () -> new ItemGrenade(7, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_BLACK_HOLE = registerWithCategory("grenade_black_hole", () -> new ItemGrenade(7, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_CLOUD = registerWithCategory("grenade_cloud", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_PINK_CLOUD = registerWithCategory("grenade_pink_cloud", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ULLAPOOL_CABER = registerWithCategory("ullapool_caber", () -> new WeaponSpecial(MainRegistry.tMatSteel, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_GENERIC = registerWithCategory("grenade_if_generic", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_HE = registerWithCategory("grenade_if_he", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_BOUNCY = registerWithCategory("grenade_if_bouncy", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_STICKY = registerWithCategory("grenade_if_sticky", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_IMPACT = registerWithCategory("grenade_if_impact", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_INCENDIARY = registerWithCategory("grenade_if_incendiary", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_TOXIC = registerWithCategory("grenade_if_toxic", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_CONCUSSION = registerWithCategory("grenade_if_concussion", () -> new ItemGrenade(4, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_BRIMSTONE = registerWithCategory("grenade_if_brimstone", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_MYSTERY = registerWithCategory("grenade_if_mystery", () -> new ItemGrenade(5, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_SPARK = registerWithCategory("grenade_if_spark", () -> new ItemGrenade(7, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_HOPWIRE = registerWithCategory("grenade_if_hopwire", () -> new ItemGrenade(7, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_IF_NULL = registerWithCategory("grenade_if_null", () -> new ItemGrenade(7, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_SMART = registerWithCategory("grenade_smart", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_MIRV = registerWithCategory("grenade_mirv", () -> new ItemGrenade(1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_BREACH = registerWithCategory("grenade_breach", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GRENADE_BURST = registerWithCategory("grenade_burst", () -> new ItemGrenade(1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> NUCLEAR_WASTE_PEARL = registerWithCategory("nuclear_waste_pearl", () -> new ItemGrenade(-1, new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> WEAPONIZED_STARBLASTER_CELL = registerWithCategory("weaponized_starblaster_cell", () -> new WeaponizedCell(new Item.Properties().stacksTo(1)), ItemCategory.WEAPON);
public static final RegistryObject<Item> BOMB_WAFFLE = registerWithCategory("bomb_waffle", () -> new ItemWaffle(20, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SCHNITZEL_VEGAN = registerWithCategory("schnitzel_vegan", () -> new ItemSchnitzelVegan(0, true, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> COTTON_CANDY = registerWithCategory("cotton_candy", () -> new ItemCottonCandy(5, false, new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> APPLE_LEAD = registerWithCategory("apple_lead", () -> new ItemAppleSchrabidium(5, 0, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> APPLE_SCHRABIDIUM = registerWithCategory("apple_schrabidium", () -> new ItemAppleSchrabidium(20, 100, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> TEM_FLAKES = registerWithCategory("tem_flakes", () -> new ItemTemFlakes(0, 0, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GLOWING_STEW = registerWithCategory("glowing_stew", () -> new ItemSoup(6, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> BALEFIRE_SCRAMBLED = registerWithCategory("balefire_scrambled", () -> new ItemSoup(6, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> BALEFIRE_AND_HAM = registerWithCategory("balefire_and_ham", () -> new ItemSoup(6, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> LEMON = registerWithCategory("lemon", () -> new ItemLemon(3, 0.5f, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> DEFINITELYFOOD = registerWithCategory("definitelyfood", () -> new ItemLemon(3, 0.5f, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> MED_IPECAC = registerWithCategory("med_ipecac", () -> new ItemLemon(0, 0, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> MED_PTSD = registerWithCategory("med_ptsd", () -> new ItemLemon(0, 0, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> MED_SCHIZOPHRENIA = registerWithCategory("med_schizophrenia", () -> new ItemLemon(0, 0, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> LOOPS = registerWithCategory("loops", () -> new ItemLemon(4, 0.25f, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> LOOP_STEW = registerWithCategory("loop_stew", () -> new ItemLemon(10, 0.5f, false, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SPONGEBOB_MACARONI = registerWithCategory("spongebob_macaroni", () -> new ItemLemon(5, 1F, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> FOODITEM = registerWithCategory("fooditem", () -> new ItemLemon(2, 5F, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> TWINKIE = registerWithCategory("twinkie", () -> new ItemLemon(3, 0.25f, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> STATIC_SANDWICH = registerWithCategory("static_sandwich", () -> new ItemLemon(6, 1F, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PUDDING = registerWithCategory("pudding", () -> new ItemLemon(6, 1F, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CANTEEN_VODKA = registerWithCategory("canteen_vodka", () -> new ItemCanteen(3 * 60, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CANTEEN_FAB = registerWithCategory("canteen_fab", () -> new ItemCanteen(2 * 60, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PANCAKE = registerWithCategory("pancake", () -> new ItemPancake(20, 20, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> NUGGET = registerWithCategory("nugget", () -> new ItemLemon(200, 1F, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PEAS = registerWithCategory("peas", () -> new ItemPeas(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> MARSHMALLOW = registerWithCategory("marshmallow", () -> new ItemMarshmallow(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CHEESE = registerWithCategory("cheese", () -> new ItemLemon(5, 0.75f, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CHEESE_QUESADILLA = registerWithCategory("cheese_quesadilla", () -> new ItemLemon(8, 1F, false, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> MUCHO_MANGO = registerWithCategory("mucho_mango", () -> new ItemMuchoMango(10, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GLYPHID_MEAT = registerWithCategory("glyphid_meat", () -> new ItemLemon(3, 0.5f, true, new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GLYPHID_MEAT_GRILLED = registerWithCategory("glyphid_meat_grilled", () -> new ItemLemon(8, 0.75f, true, new Item.Properties()).setPotionEffect(Potion.damageBoost.id, 180, 1, 1F), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> EGG_GLYPHID = registerWithCategory("egg_glyphid", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> DEFUSER = registerWithCategory("defuser", () -> new ItemTooling(ToolType.DEFUSER, 100, new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.NUKE);
public static final RegistryObject<Item> REACHER = registerWithCategory("reacher", () -> new Item(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONTROL);
public static final RegistryObject<Item> BISMUTH_TOOL = registerWithCategory("bismuth_tool", () -> new ItemAmatExtractor(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONTROL);
public static final RegistryObject<Item> MELTDOWN_TOOL = registerWithCategory("meltdown_tool", () -> new ItemDyatlov(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FLAME_PONY = registerWithCategory("flame_pony", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FLAME_CONSPIRACY = registerWithCategory("flame_conspiracy", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FLAME_POLITICS = registerWithCategory("flame_politics", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> FLAME_OPINION = registerWithCategory("flame_opinion", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> GADGET_EXPLOSIVE = registerWithCategory("gadget_explosive", () -> new Item(new Item.Properties()), ItemCategory.NUKE);
public static final RegistryObject<Item> EARLY_EXPLOSIVE_LENSES = registerWithCategory("early_explosive_lenses", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.NUKE);
public static final RegistryObject<Item> EXPLOSIVE_LENSES = registerWithCategory("explosive_lenses", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.NUKE);
public static final RegistryObject<Item> GADGET_WIREING = registerWithCategory("gadget_wireing", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> GADGET_CORE = registerWithCategory("gadget_core", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setRarity(EnumRarity.uncommon), ItemCategory.NUKE);
public static final RegistryObject<Item> BOY_IGNITER = registerWithCategory("boy_igniter", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> BOY_PROPELLANT = registerWithCategory("boy_propellant", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> BOY_BULLET = registerWithCategory("boy_bullet", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setRarity(EnumRarity.uncommon), ItemCategory.NUKE);
public static final RegistryObject<Item> BOY_TARGET = registerWithCategory("boy_target", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setRarity(EnumRarity.uncommon), ItemCategory.NUKE);
public static final RegistryObject<Item> BOY_SHIELDING = registerWithCategory("boy_shielding", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> MAN_EXPLOSIVE = registerWithCategory("man_explosive", () -> new Item(new Item.Properties()), ItemCategory.NUKE);
public static final RegistryObject<Item> MAN_IGNITER = registerWithCategory("man_igniter", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> MAN_CORE = registerWithCategory("man_core", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setRarity(EnumRarity.uncommon), ItemCategory.NUKE);
public static final RegistryObject<Item> MIKE_CORE = registerWithCategory("mike_core", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> MIKE_DEUT = registerWithCategory("mike_deut", () -> new Item(new Item.Properties().stacksTo(1)).setContainerItem(ModItems.tank_steel), ItemCategory.NUKE);
public static final RegistryObject<Item> MIKE_COOLING_UNIT = registerWithCategory("mike_cooling_unit", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> TSAR_CORE = registerWithCategory("tsar_core", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> FLEIJA_IGNITER = registerWithCategory("fleija_igniter", () -> new ItemFleija(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> FLEIJA_PROPELLANT = registerWithCategory("fleija_propellant", () -> new ItemFleija(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> FLEIJA_CORE = registerWithCategory("fleija_core", () -> new ItemFleija(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> SOLINIUM_IGNITER = registerWithCategory("solinium_igniter", () -> new ItemSolinium(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> SOLINIUM_PROPELLANT = registerWithCategory("solinium_propellant", () -> new ItemSolinium(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> SOLINIUM_CORE = registerWithCategory("solinium_core", () -> new ItemSolinium(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> N2_CHARGE = registerWithCategory("n2_charge", () -> new ItemN2(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> EGG_BALEFIRE_SHARD = registerWithCategory("egg_balefire_shard", () -> new Item(new Item.Properties().stacksTo(16)), ItemCategory.NUKE);
public static final RegistryObject<Item> EGG_BALEFIRE = registerWithCategory("egg_balefire", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_TNT = registerWithCategory("custom_tnt", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_NUKE = registerWithCategory("custom_nuke", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_HYDRO = registerWithCategory("custom_hydro", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_AMAT = registerWithCategory("custom_amat", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_DIRTY = registerWithCategory("custom_dirty", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_SCHRAB = registerWithCategory("custom_schrab", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_FALL = registerWithCategory("custom_fall", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> BATTERY_GENERIC = registerWithCategory("battery_generic", () -> new ItemBattery(5000, 100, 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_ADVANCED = registerWithCategory("battery_advanced", () -> new ItemBattery(20000, 500, 500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_LITHIUM = registerWithCategory("battery_lithium", () -> new ItemBattery(250000, 1000, 1000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SCHRABIDIUM = registerWithCategory("battery_schrabidium", () -> new ItemBattery(1000000, 5000, 5000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK = registerWithCategory("battery_spark", () -> new ItemBattery(100000000, 2000000, 2000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_TRIXITE = registerWithCategory("battery_trixite", () -> new ItemBattery(5000000, 40000, 200000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_CREATIVE = registerWithCategory("battery_creative", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_RED_CELL = registerWithCategory("battery_red_cell", () -> new ItemBattery(15000, 100, 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_RED_CELL_6 = registerWithCategory("battery_red_cell_6", () -> new ItemBattery(15000 * 6, 100, 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_RED_CELL_24 = registerWithCategory("battery_red_cell_24", () -> new ItemBattery(15000 * 24, 100, 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_ADVANCED_CELL = registerWithCategory("battery_advanced_cell", () -> new ItemBattery(60000, 500, 500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_ADVANCED_CELL_4 = registerWithCategory("battery_advanced_cell_4", () -> new ItemBattery(60000 * 4, 500, 500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_ADVANCED_CELL_12 = registerWithCategory("battery_advanced_cell_12", () -> new ItemBattery(60000 * 12, 500, 500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_LITHIUM_CELL = registerWithCategory("battery_lithium_cell", () -> new ItemBattery(750000, 1000, 1000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_LITHIUM_CELL_3 = registerWithCategory("battery_lithium_cell_3", () -> new ItemBattery(750000 * 3, 1000, 1000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_LITHIUM_CELL_6 = registerWithCategory("battery_lithium_cell_6", () -> new ItemBattery(750000 * 6, 1000, 1000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SCHRABIDIUM_CELL = registerWithCategory("battery_schrabidium_cell", () -> new ItemBattery(3000000, 5000, 5000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SCHRABIDIUM_CELL_2 = registerWithCategory("battery_schrabidium_cell_2", () -> new ItemBattery(3000000 * 2, 5000, 5000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SCHRABIDIUM_CELL_4 = registerWithCategory("battery_schrabidium_cell_4", () -> new ItemBattery(3000000 * 4, 5000, 5000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK_CELL_6 = registerWithCategory("battery_spark_cell_6", () -> new ItemBattery(100000000L * 6L, 2000000, 2000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK_CELL_25 = registerWithCategory("battery_spark_cell_25", () -> new ItemBattery(100000000L * 25L, 2000000, 2000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK_CELL_100 = registerWithCategory("battery_spark_cell_100", () -> new ItemBattery(100000000L * 100L, 2000000, 2000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK_CELL_1000 = registerWithCategory("battery_spark_cell_1000", () -> new ItemBattery(100000000L * 1000L, 20000000, 20000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK_CELL_2500 = registerWithCategory("battery_spark_cell_2500", () -> new ItemBattery(100000000L * 2500L, 20000000, 20000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK_CELL_10000 = registerWithCategory("battery_spark_cell_10000", () -> new ItemBattery(100000000L * 10000L, 200000000, 200000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SPARK_CELL_POWER = registerWithCategory("battery_spark_cell_power", () -> new ItemBattery(100000000L * 1000000L, 200000000, 200000000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> CUBE_POWER = registerWithCategory("cube_power", () -> new ItemBattery(1000000000000000000L, 1000000000000000L, 1000000000000000L, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SC_URANIUM = registerWithCategory("battery_sc_uranium", () -> new ItemSelfcharger(5, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SC_TECHNETIUM = registerWithCategory("battery_sc_technetium", () -> new ItemSelfcharger(25, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SC_PLUTONIUM = registerWithCategory("battery_sc_plutonium", () -> new ItemSelfcharger(100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SC_POLONIUM = registerWithCategory("battery_sc_polonium", () -> new ItemSelfcharger(500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SC_GOLD = registerWithCategory("battery_sc_gold", () -> new ItemSelfcharger(2500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SC_LEAD = registerWithCategory("battery_sc_lead", () -> new ItemSelfcharger(5000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_SC_AMERICIUM = registerWithCategory("battery_sc_americium", () -> new ItemSelfcharger(10000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_POTATO = registerWithCategory("battery_potato", () -> new ItemBattery(1000, 0, 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> BATTERY_POTATOS = registerWithCategory("battery_potatos", () -> new ItemPotatos(500000, 0, 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> HEV_BATTERY = registerWithCategory("hev_battery", () -> new ItemFusionCore(150000, new Item.Properties().stacksTo(4)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FUSION_CORE = registerWithCategory("fusion_core", () -> new ItemFusionCore(2500000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FUSION_CORE_INFINITE = registerWithCategory("fusion_core_infinite", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> ENERGY_CORE = registerWithCategory("energy_core", () -> new ItemBattery(10000000, 0, 1000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FUSE = registerWithCategory("fuse", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> REDCOIL_CAPACITOR = registerWithCategory("redcoil_capacitor", () -> new ItemCapacitor(10, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> EUPHEMIUM_CAPACITOR = registerWithCategory("euphemium_capacitor", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setRarity(EnumRarity.epic), ItemCategory.CONTROL);
public static final RegistryObject<Item> SCREWDRIVER = registerWithCategory("screwdriver", () -> new ItemTooling(ToolType.SCREWDRIVER, 100, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCREWDRIVER_DESH = registerWithCategory("screwdriver_desh", () -> new ItemTooling(ToolType.SCREWDRIVER, 0, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAND_DRILL = registerWithCategory("hand_drill", () -> new ItemTooling(ToolType.HAND_DRILL, 100, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAND_DRILL_DESH = registerWithCategory("hand_drill_desh", () -> new ItemTooling(ToolType.HAND_DRILL, 0, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WRENCH_ARCHINEER = registerWithCategory("wrench_archineer", () -> new ItemToolingWeapon(ToolType.WRENCH, 1000, 12F, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHEMISTRY_SET = registerWithCategory("chemistry_set", () -> new ItemCraftingDegradation(100, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHEMISTRY_SET_BORON = registerWithCategory("chemistry_set_boron", () -> new ItemCraftingDegradation(0, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BLOWTORCH = registerWithCategory("blowtorch", () -> new ItemBlowtorch(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ACETYLENE_TORCH = registerWithCategory("acetylene_torch", () -> new ItemBlowtorch(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOLTGUN = registerWithCategory("boltgun", () -> new ItemBoltgun(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> OVERFUSE = registerWithCategory("overfuse", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ARC_ELECTRODE = registerWithCategory("arc_electrode", () -> new ItemArcElectrode(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> ARC_ELECTRODE_BURNT = registerWithCategory("arc_electrode_burnt", () -> new ItemArcElectrodeBurnt(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_FOCUS_BLANK = registerWithCategory("ams_focus_blank", () -> new Item(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_FOCUS_LIMITER = registerWithCategory("ams_focus_limiter", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_FOCUS_BOOSTER = registerWithCategory("ams_focus_booster", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_MUZZLE = registerWithCategory("ams_muzzle", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_LENS = registerWithCategory("ams_lens", () -> new ItemLens(60 * 60 * 60 * 20 * 100, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CORE_SING = registerWithCategory("ams_core_sing", () -> new ItemAMSCore(1000000000L, 200, 10, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CORE_WORMHOLE = registerWithCategory("ams_core_wormhole", () -> new ItemAMSCore(1500000000L, 200, 15, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CORE_EYEOFHARMONY = registerWithCategory("ams_core_eyeofharmony", () -> new ItemAMSCore(2500000000L, 300, 10, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> AMS_CORE_THINGY = registerWithCategory("ams_core_thingy", () -> new ItemAMSCore(5000000000L, 250, 5, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FUSION_SHIELD_TUNGSTEN = registerWithCategory("fusion_shield_tungsten", () -> new ItemFusionShield(60 * 60 * 60 * 5, 3500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FUSION_SHIELD_DESH = registerWithCategory("fusion_shield_desh", () -> new ItemFusionShield(60 * 60 * 60 * 10, 4500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FUSION_SHIELD_CHLOROPHYTE = registerWithCategory("fusion_shield_chlorophyte", () -> new ItemFusionShield(60 * 60 * 60 * 15, 9000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> FUSION_SHIELD_VAPORWAVE = registerWithCategory("fusion_shield_vaporwave", () -> new ItemFusionShield(60 * 60 * 60 * 10, 1916169, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_MUFFLER = registerWithCategory("upgrade_muffler", () -> new ItemMuffler(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> UPGRADE_TEMPLATE = registerWithCategory("upgrade_template", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> UPGRADE_SPEED_1 = registerWithCategory("upgrade_speed_1", () -> new ItemMachineUpgrade(UpgradeType.SPEED, 1, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_SPEED_2 = registerWithCategory("upgrade_speed_2", () -> new ItemMachineUpgrade(UpgradeType.SPEED, 2, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_SPEED_3 = registerWithCategory("upgrade_speed_3", () -> new ItemMachineUpgrade(UpgradeType.SPEED, 3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_EFFECT_1 = registerWithCategory("upgrade_effect_1", () -> new ItemMachineUpgrade(UpgradeType.EFFECT, 1, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_EFFECT_2 = registerWithCategory("upgrade_effect_2", () -> new ItemMachineUpgrade(UpgradeType.EFFECT, 2, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_EFFECT_3 = registerWithCategory("upgrade_effect_3", () -> new ItemMachineUpgrade(UpgradeType.EFFECT, 3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_POWER_1 = registerWithCategory("upgrade_power_1", () -> new ItemMachineUpgrade(UpgradeType.POWER, 1, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_POWER_2 = registerWithCategory("upgrade_power_2", () -> new ItemMachineUpgrade(UpgradeType.POWER, 2, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_POWER_3 = registerWithCategory("upgrade_power_3", () -> new ItemMachineUpgrade(UpgradeType.POWER, 3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_FORTUNE_1 = registerWithCategory("upgrade_fortune_1", () -> new ItemMachineUpgrade(UpgradeType.FORTUNE, 1, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_FORTUNE_2 = registerWithCategory("upgrade_fortune_2", () -> new ItemMachineUpgrade(UpgradeType.FORTUNE, 2, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_FORTUNE_3 = registerWithCategory("upgrade_fortune_3", () -> new ItemMachineUpgrade(UpgradeType.FORTUNE, 3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_AFTERBURN_1 = registerWithCategory("upgrade_afterburn_1", () -> new ItemMachineUpgrade(UpgradeType.AFTERBURN, 1, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_AFTERBURN_2 = registerWithCategory("upgrade_afterburn_2", () -> new ItemMachineUpgrade(UpgradeType.AFTERBURN, 2, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_AFTERBURN_3 = registerWithCategory("upgrade_afterburn_3", () -> new ItemMachineUpgrade(UpgradeType.AFTERBURN, 3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_OVERDRIVE_1 = registerWithCategory("upgrade_overdrive_1", () -> new ItemMachineUpgrade(UpgradeType.OVERDRIVE, 1, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_OVERDRIVE_2 = registerWithCategory("upgrade_overdrive_2", () -> new ItemMachineUpgrade(UpgradeType.OVERDRIVE, 2, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_OVERDRIVE_3 = registerWithCategory("upgrade_overdrive_3", () -> new ItemMachineUpgrade(UpgradeType.OVERDRIVE, 3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_RADIUS = registerWithCategory("upgrade_radius", () -> new ItemMachineUpgrade(new Item.Properties().stacksTo(16)), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_HEALTH = registerWithCategory("upgrade_health", () -> new ItemMachineUpgrade(new Item.Properties().stacksTo(16)), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_SMELTER = registerWithCategory("upgrade_smelter", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_SHREDDER = registerWithCategory("upgrade_shredder", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_CENTRIFUGE = registerWithCategory("upgrade_centrifuge", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_CRYSTALLIZER = registerWithCategory("upgrade_crystallizer", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_NULLIFIER = registerWithCategory("upgrade_nullifier", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_SCREM = registerWithCategory("upgrade_screm", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_GC_SPEED = registerWithCategory("upgrade_gc_speed", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_5G = registerWithCategory("upgrade_5g", () -> new ItemMachineUpgrade(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_STACK = registerWithCategory("upgrade_stack", () -> new ItemMetaUpgrade(3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> UPGRADE_EJECTOR = registerWithCategory("upgrade_ejector", () -> new ItemMetaUpgrade(3, new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> WAND_K = registerWithCategory("wand_k", () -> new ItemWand(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> WAND_S = registerWithCategory("wand_s", () -> new ItemWandS(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> WAND_D = registerWithCategory("wand_d", () -> new ItemWandD(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> STRUCTURE_SINGLE = registerWithCategory("structure_single", () -> new ItemStructureSingle(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STRUCTURE_SOLID = registerWithCategory("structure_solid", () -> new ItemStructureSolid(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STRUCTURE_PATTERN = registerWithCategory("structure_pattern", () -> new ItemStructurePattern(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STRUCTURE_RANDOMIZED = registerWithCategory("structure_randomized", () -> new ItemStructureRandomized(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STRUCTURE_RANDOMLY = registerWithCategory("structure_randomly", () -> new ItemStructureRandomly(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STRUCTURE_CUSTOMMACHINE = registerWithCategory("structure_custommachine", () -> new ItemCMStructure(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> ROD_OF_DISCORD = registerWithCategory("rod_of_discord", () -> new ItemDiscord(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> NUKE_STARTER_KIT = registerWithCategory("nuke_starter_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> NUKE_ADVANCED_KIT = registerWithCategory("nuke_advanced_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> NUKE_COMMERCIALLY_KIT = registerWithCategory("nuke_commercially_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> NUKE_ELECTRIC_KIT = registerWithCategory("nuke_electric_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GADGET_KIT = registerWithCategory("gadget_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> BOY_KIT = registerWithCategory("boy_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> MAN_KIT = registerWithCategory("man_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> MIKE_KIT = registerWithCategory("mike_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> TSAR_KIT = registerWithCategory("tsar_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> MULTI_KIT = registerWithCategory("multi_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> CUSTOM_KIT = registerWithCategory("custom_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> GRENADE_KIT = registerWithCategory("grenade_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.WEAPON);
public static final RegistryObject<Item> FLEIJA_KIT = registerWithCategory("fleija_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> PROTOTYPE_KIT = registerWithCategory("prototype_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> MISSILE_KIT = registerWithCategory("missile_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> T45_KIT = registerWithCategory("t45_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> EUPHEMIUM_KIT = registerWithCategory("euphemium_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SOLINIUM_KIT = registerWithCategory("solinium_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.NUKE);
public static final RegistryObject<Item> HAZMAT_KIT = registerWithCategory("hazmat_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> HAZMAT_RED_KIT = registerWithCategory("hazmat_red_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> HAZMAT_GREY_KIT = registerWithCategory("hazmat_grey_kit", () -> new ItemStarterKit(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> KIT_CUSTOM = registerWithCategory("kit_custom", () -> new ItemKitCustom(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> KIT_TOOLBOX_EMPTY = registerWithCategory("kit_toolbox_empty", () -> new Item(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> KIT_TOOLBOX = registerWithCategory("kit_toolbox", () -> new ItemKitNBT(new Item.Properties()).setContainerItem(kit_toolbox_empty), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> LOOT_10 = registerWithCategory("loot_10", () -> new ItemLootCrate(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> LOOT_15 = registerWithCategory("loot_15", () -> new ItemLootCrate(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> LOOT_MISC = registerWithCategory("loot_misc", () -> new ItemLootCrate(new Item.Properties().stacksTo(1)), ItemCategory.MISSILE);
public static final RegistryObject<Item> AMMO_CONTAINER = registerWithCategory("ammo_container", () -> new ItemAmmoContainer(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> INGOT_EUPHEMIUM = registerWithCategory("ingot_euphemium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> NUGGET_EUPHEMIUM = registerWithCategory("nugget_euphemium", () -> new ItemCustomLore(new Item.Properties()).setRarity(EnumRarity.epic), ItemCategory.PARTS);
public static final RegistryObject<Item> WATCH = registerWithCategory("watch", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setRarity(EnumRarity.epic), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> APPLE_EUPHEMIUM = registerWithCategory("apple_euphemium", () -> new ItemAppleEuphemium(20, 100, false, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> IGNITER = registerWithCategory("igniter", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.NUKE);
public static final RegistryObject<Item> DETONATOR = registerWithCategory("detonator", () -> new ItemDetonator(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.NUKE);
public static final RegistryObject<Item> DETONATOR_MULTI = registerWithCategory("detonator_multi", () -> new ItemMultiDetonator(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.NUKE);
public static final RegistryObject<Item> DETONATOR_LASER = registerWithCategory("detonator_laser", () -> new ItemLaserDetonator(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.NUKE);
public static final RegistryObject<Item> DETONATOR_DEADMAN = registerWithCategory("detonator_deadman", () -> new ItemDrop(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.NUKE);
public static final RegistryObject<Item> DETONATOR_DE = registerWithCategory("detonator_de", () -> new ItemDrop(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.NUKE);
public static final RegistryObject<Item> BOMB_CALLER = registerWithCategory("bomb_caller", () -> new ItemBombCaller(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> METEOR_REMOTE = registerWithCategory("meteor_remote", () -> new ItemMeteorRemote(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> ANCHOR_REMOTE = registerWithCategory("anchor_remote", () -> new ItemAnchorRemote(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CHOPPER = registerWithCategory("chopper", () -> new ItemChopper(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SPAWN_WORM = registerWithCategory("spawn_worm", () -> new ItemChopper(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SPAWN_UFO = registerWithCategory("spawn_ufo", () -> new ItemChopper(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SPAWN_DUCK = registerWithCategory("spawn_duck", () -> new ItemChopper(new Item.Properties().stacksTo(16)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> LINKER = registerWithCategory("linker", () -> new ItemTeleLink(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> REACTOR_SENSOR = registerWithCategory("reactor_sensor", () -> new ItemReactorSensor(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> OIL_DETECTOR = registerWithCategory("oil_detector", () -> new ItemOilDetector(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> TURRET_CONTROL = registerWithCategory("turret_control", () -> new ItemTurretControl(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TURRET_CHIP = registerWithCategory("turret_chip", () -> new ItemTurretChip(new Item.Properties().stacksTo(1)), ItemCategory.WEAPON);
public static final RegistryObject<Item> TURRET_BIOMETRY = registerWithCategory("turret_biometry", () -> new ItemTurretBiometry(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.WEAPON);
public static final RegistryObject<Item> DOSIMETER = registerWithCategory("dosimeter", () -> new ItemDosimeter(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GEIGER_COUNTER = registerWithCategory("geiger_counter", () -> new ItemGeigerCounter(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> DIGAMMA_DIAGNOSTIC = registerWithCategory("digamma_diagnostic", () -> new ItemDigammaDiagnostic(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> POLLUTION_DETECTOR = registerWithCategory("pollution_detector", () -> new ItemPollutionDetector(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> ORE_DENSITY_SCANNER = registerWithCategory("ore_density_scanner", () -> new ItemOreDensityScanner(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SURVEY_SCANNER = registerWithCategory("survey_scanner", () -> new ItemSurveyScanner(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> MIRROR_TOOL = registerWithCategory("mirror_tool", () -> new ItemMirrorTool(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> RBMK_TOOL = registerWithCategory("rbmk_tool", () -> new ItemRBMKTool(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> COLTAN_TOOL = registerWithCategory("coltan_tool", () -> new ItemColtanCompass(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> POWER_NET_TOOL = registerWithCategory("power_net_tool", () -> new ItemPowerNetTool(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> ANALYSIS_TOOL = registerWithCategory("analysis_tool", () -> new ItemAnalysisTool(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> COUPLING_TOOL = registerWithCategory("coupling_tool", () -> new ItemCouplingTool(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> DRONE_LINKER = registerWithCategory("drone_linker", () -> new ItemDroneLinker(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> RADAR_LINKER = registerWithCategory("radar_linker", () -> new ItemRadarLinker(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SETTINGS_TOOL = registerWithCategory("settings_tool", () -> new ItemSettingsTool(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> KEY = registerWithCategory("key", () -> new ItemKey(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> KEY_RED = registerWithCategory("key_red", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> KEY_RED_CRACKED = registerWithCategory("key_red_cracked", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> KEY_KIT = registerWithCategory("key_kit", () -> new ItemCounterfitKeys(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> KEY_FAKE = registerWithCategory("key_fake", () -> new ItemKey(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PIN = registerWithCategory("pin", () -> new ItemCustomLore(new Item.Properties().stacksTo(8)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PADLOCK_RUSTY = registerWithCategory("padlock_rusty", () -> new ItemLock(1, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PADLOCK = registerWithCategory("padlock", () -> new ItemLock(0.1, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PADLOCK_REINFORCED = registerWithCategory("padlock_reinforced", () -> new ItemLock(0.02, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PADLOCK_UNBREAKABLE = registerWithCategory("padlock_unbreakable", () -> new ItemLock(0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MECH_KEY = registerWithCategory("mech_key", () -> new ItemCustomLore(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TEMPLATE_FOLDER = registerWithCategory("template_folder", () -> new ItemTemplateFolder(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JOURNAL_PIP = registerWithCategory("journal_pip", () -> new ItemTemplateFolder(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JOURNAL_BJ = registerWithCategory("journal_bj", () -> new ItemTemplateFolder(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JOURNAL_SILVER = registerWithCategory("journal_silver", () -> new ItemTemplateFolder(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ASSEMBLY_TEMPLATE = registerWithCategory("assembly_template", () -> new ItemAssemblyTemplate(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHEMISTRY_TEMPLATE = registerWithCategory("chemistry_template", () -> new ItemChemistryTemplate(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHEMISTRY_ICON = registerWithCategory("chemistry_icon", () -> new ItemChemistryIcon(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CRUCIBLE_TEMPLATE = registerWithCategory("crucible_template", () -> new ItemCrucibleTemplate(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FLUID_IDENTIFIER = registerWithCategory("fluid_identifier", () -> new ItemFluidIdentifier(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FLUID_IDENTIFIER_MULTI = registerWithCategory("fluid_identifier_multi", () -> new ItemFluidIDMulti(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FLUID_ICON = registerWithCategory("fluid_icon", () -> new ItemFluidIcon(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FLUID_TANK_EMPTY = registerWithCategory("fluid_tank_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> FLUID_TANK_FULL = registerWithCategory("fluid_tank_full", () -> new ItemFluidTank(new Item.Properties()).setContainerItem(ModItems.fluid_tank_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> FLUID_TANK_LEAD_EMPTY = registerWithCategory("fluid_tank_lead_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> FLUID_TANK_LEAD_FULL = registerWithCategory("fluid_tank_lead_full", () -> new ItemFluidTank(new Item.Properties()).setContainerItem(ModItems.fluid_tank_lead_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> FLUID_BARREL_EMPTY = registerWithCategory("fluid_barrel_empty", () -> new Item(new Item.Properties()), ItemCategory.CONTROL);
public static final RegistryObject<Item> FLUID_BARREL_FULL = registerWithCategory("fluid_barrel_full", () -> new ItemFluidTank(new Item.Properties()).setContainerItem(ModItems.fluid_barrel_empty), ItemCategory.CONTROL);
public static final RegistryObject<Item> FLUID_BARREL_INFINITE = registerWithCategory("fluid_barrel_infinite", () -> new ItemInfiniteFluid(null, 1_000_000_000, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> PIPETTE = registerWithCategory("pipette", () -> new ItemPipette(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> PIPETTE_BORON = registerWithCategory("pipette_boron", () -> new ItemPipette(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> PIPETTE_LABORATORY = registerWithCategory("pipette_laboratory", () -> new ItemPipette(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> SIPHON = registerWithCategory("siphon", () -> new ItemFluidSiphon(new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> INF_WATER = registerWithCategory("inf_water", () -> new ItemInfiniteFluid(Fluids.WATER, 50, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> INF_WATER_MK2 = registerWithCategory("inf_water_mk2", () -> new ItemInfiniteFluid(Fluids.WATER, 500, new Item.Properties().stacksTo(1)), ItemCategory.CONTROL);
public static final RegistryObject<Item> DISPERSER_CANISTER_EMPTY = registerWithCategory("disperser_canister_empty", () -> new Item(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> DISPERSER_CANISTER = registerWithCategory("disperser_canister", () -> new ItemDisperser(new Item.Properties()).setContainerItem(ModItems.disperser_canister_empty), ItemCategory.WEAPON);
public static final RegistryObject<Item> GLYPHID_GLAND_EMPTY = registerWithCategory("glyphid_gland_empty", () -> new Item(new Item.Properties()), ItemCategory.WEAPON);
public static final RegistryObject<Item> GLYPHID_GLAND = registerWithCategory("glyphid_gland", () -> new ItemDisperser(new Item.Properties()).setContainerItem(ModItems.glyphid_gland_empty), ItemCategory.WEAPON);
public static final RegistryObject<Item> SIREN_TRACK = registerWithCategory("siren_track", () -> new ItemCassette(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FLUID_DUCT = registerWithCategory("fluid_duct", () -> new ItemFluidDuct(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOBMAZON = registerWithCategory("bobmazon", () -> new ItemCatalog(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> BOBMAZON_HIDDEN = registerWithCategory("bobmazon_hidden", () -> new ItemCatalog(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> EUPHEMIUM_HELMET = registerWithCategory("euphemium_helmet", () -> new ArmorEuphemium(MainRegistry.aMatEuph, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> EUPHEMIUM_PLATE = registerWithCategory("euphemium_plate", () -> new ArmorEuphemium(MainRegistry.aMatEuph, 1, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> EUPHEMIUM_LEGS = registerWithCategory("euphemium_legs", () -> new ArmorEuphemium(MainRegistry.aMatEuph, 2, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> EUPHEMIUM_BOOTS = registerWithCategory("euphemium_boots", () -> new ArmorEuphemium(MainRegistry.aMatEuph, 3, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GOGGLES = registerWithCategory("goggles", () -> new ArmorModel(ArmorMaterial.IRON, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ASHGLASSES = registerWithCategory("ashglasses", () -> new ArmorAshGlasses(ArmorMaterial.IRON, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK = registerWithCategory("gas_mask", () -> new ArmorGasMask(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK_M65 = registerWithCategory("gas_mask_m65", () -> new ArmorGasMask(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK_MONO = registerWithCategory("gas_mask_mono", () -> new ArmorGasMask(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> GAS_MASK_OLDE = registerWithCategory("gas_mask_olde", () -> new ArmorGasMask(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MASK_RAG = registerWithCategory("mask_rag", () -> new ModArmor(aMatRags, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MASK_PISS = registerWithCategory("mask_piss", () -> new ModArmor(aMatRags, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> NOSSY_HAT = registerWithCategory("nossy_hat", () -> new ArmorHat(MainRegistry.aMatAlloy, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> NO9 = registerWithCategory("no9", () -> new ArmorNo9(MainRegistry.aMatSteel, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BETA = registerWithCategory("beta", () -> new ItemDrop(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> OXY_MASK = registerWithCategory("oxy_mask", () -> new ArmorModel(ArmorMaterial.IRON, 7, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_HELMET = registerWithCategory("schrabidium_helmet", () -> new ArmorFSB(MainRegistry.aMatSchrab, 0, RefStrings.MODID + ":textures/armor/schrabidium_1.png", new Item.Properties()).addEffect(new PotionEffect(Potion.digSpeed.id, 20, 2).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 2).addEffect(new PotionEffect(Potion.jump.id, 20, 1).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 2), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_PLATE = registerWithCategory("schrabidium_plate", () -> new ArmorFSB(MainRegistry.aMatSchrab, 1, RefStrings.MODID + ":textures/armor/schrabidium_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_LEGS = registerWithCategory("schrabidium_legs", () -> new ArmorFSB(MainRegistry.aMatSchrab, 2, RefStrings.MODID + ":textures/armor/schrabidium_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_BOOTS = registerWithCategory("schrabidium_boots", () -> new ArmorFSB(MainRegistry.aMatSchrab, 3, RefStrings.MODID + ":textures/armor/schrabidium_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BISMUTH_HELMET = registerWithCategory("bismuth_helmet", () -> new ArmorBismuth(MainRegistry.aMatBismuth, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).addEffect(new PotionEffect(Potion.jump.id, 20, 6).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 6).addEffect(new PotionEffect(Potion.regeneration.id, 20, 1).addEffect(new PotionEffect(Potion.nightVision.id, 15 * 20, 0).setDashCount(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BISMUTH_PLATE = registerWithCategory("bismuth_plate", () -> new ArmorBismuth(MainRegistry.aMatBismuth, 1, RefStrings.MODID + ":textures/armor/starmetal_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BISMUTH_LEGS = registerWithCategory("bismuth_legs", () -> new ArmorBismuth(MainRegistry.aMatBismuth, 2, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BISMUTH_BOOTS = registerWithCategory("bismuth_boots", () -> new ArmorBismuth(MainRegistry.aMatBismuth, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_HELMET = registerWithCategory("titanium_helmet", () -> new ArmorFSB(MainRegistry.aMatTitan, 0, RefStrings.MODID + ":textures/armor/titanium_1.png", new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_PLATE = registerWithCategory("titanium_plate", () -> new ArmorFSB(MainRegistry.aMatTitan, 1, RefStrings.MODID + ":textures/armor/titanium_1.png", new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_LEGS = registerWithCategory("titanium_legs", () -> new ArmorFSB(MainRegistry.aMatTitan, 2, RefStrings.MODID + ":textures/armor/titanium_2.png", new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_BOOTS = registerWithCategory("titanium_boots", () -> new ArmorFSB(MainRegistry.aMatTitan, 3, RefStrings.MODID + ":textures/armor/titanium_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_HELMET = registerWithCategory("steel_helmet", () -> new ArmorFSB(MainRegistry.aMatSteel, 0, RefStrings.MODID + ":textures/armor/steel_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_PLATE = registerWithCategory("steel_plate", () -> new ArmorFSB(MainRegistry.aMatSteel, 1, RefStrings.MODID + ":textures/armor/steel_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_LEGS = registerWithCategory("steel_legs", () -> new ArmorFSB(MainRegistry.aMatSteel, 2, RefStrings.MODID + ":textures/armor/steel_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_BOOTS = registerWithCategory("steel_boots", () -> new ArmorFSB(MainRegistry.aMatSteel, 3, RefStrings.MODID + ":textures/armor/steel_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_HELMET = registerWithCategory("alloy_helmet", () -> new ArmorFSB(MainRegistry.aMatAlloy, 0, RefStrings.MODID + ":textures/armor/alloy_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_PLATE = registerWithCategory("alloy_plate", () -> new ArmorFSB(MainRegistry.aMatAlloy, 1, RefStrings.MODID + ":textures/armor/alloy_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_LEGS = registerWithCategory("alloy_legs", () -> new ArmorFSB(MainRegistry.aMatAlloy, 2, RefStrings.MODID + ":textures/armor/alloy_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_BOOTS = registerWithCategory("alloy_boots", () -> new ArmorFSB(MainRegistry.aMatAlloy, 3, RefStrings.MODID + ":textures/armor/alloy_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_HELMET = registerWithCategory("cmb_helmet", () -> new ArmorFSB(MainRegistry.aMatCMB, 0, RefStrings.MODID + ":textures/armor/cmb_1.png", new Item.Properties()).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 2).addEffect(new PotionEffect(Potion.digSpeed.id, 20, 2).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 4), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_PLATE = registerWithCategory("cmb_plate", () -> new ArmorFSB(MainRegistry.aMatCMB, 1, RefStrings.MODID + ":textures/armor/cmb_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_LEGS = registerWithCategory("cmb_legs", () -> new ArmorFSB(MainRegistry.aMatCMB, 2, RefStrings.MODID + ":textures/armor/cmb_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_BOOTS = registerWithCategory("cmb_boots", () -> new ArmorFSB(MainRegistry.aMatCMB, 3, RefStrings.MODID + ":textures/armor/cmb_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PAA_PLATE = registerWithCategory("paa_plate", () -> new ArmorFSB(MainRegistry.aMatPaa, 1, RefStrings.MODID + ":textures/armor/paa_1.png", new Item.Properties()).setNoHelmet(true).addEffect(new PotionEffect(Potion.digSpeed.id, 20, 0), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PAA_LEGS = registerWithCategory("paa_legs", () -> new ArmorFSB(MainRegistry.aMatPaa, 2, RefStrings.MODID + ":textures/armor/paa_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PAA_BOOTS = registerWithCategory("paa_boots", () -> new ArmorFSB(MainRegistry.aMatPaa, 3, RefStrings.MODID + ":textures/armor/paa_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ASBESTOS_HELMET = registerWithCategory("asbestos_helmet", () -> new ArmorFSB(MainRegistry.aMatAsbestos, 0, RefStrings.MODID + ":textures/armor/asbestos_1.png", new Item.Properties()).setOverlay(RefStrings.MODID + ":textures/misc/overlay_asbestos.png"), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ASBESTOS_PLATE = registerWithCategory("asbestos_plate", () -> new ArmorFSB(MainRegistry.aMatAsbestos, 1, RefStrings.MODID + ":textures/armor/asbestos_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ASBESTOS_LEGS = registerWithCategory("asbestos_legs", () -> new ArmorFSB(MainRegistry.aMatAsbestos, 2, RefStrings.MODID + ":textures/armor/asbestos_2.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ASBESTOS_BOOTS = registerWithCategory("asbestos_boots", () -> new ArmorFSB(MainRegistry.aMatAsbestos, 3, RefStrings.MODID + ":textures/armor/asbestos_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SECURITY_HELMET = registerWithCategory("security_helmet", () -> new ArmorFSB(MainRegistry.aMatSecurity, 0, RefStrings.MODID + ":textures/armor/security_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SECURITY_PLATE = registerWithCategory("security_plate", () -> new ArmorFSB(MainRegistry.aMatSecurity, 1, RefStrings.MODID + ":textures/armor/security_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SECURITY_LEGS = registerWithCategory("security_legs", () -> new ArmorFSB(MainRegistry.aMatSecurity, 2, RefStrings.MODID + ":textures/armor/security_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SECURITY_BOOTS = registerWithCategory("security_boots", () -> new ArmorFSB(MainRegistry.aMatSecurity, 3, RefStrings.MODID + ":textures/armor/security_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_HELMET = registerWithCategory("cobalt_helmet", () -> new ArmorFSB(MainRegistry.aMatCobalt, 0, RefStrings.MODID + ":textures/armor/cobalt_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_PLATE = registerWithCategory("cobalt_plate", () -> new ArmorFSB(MainRegistry.aMatCobalt, 1, RefStrings.MODID + ":textures/armor/cobalt_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_LEGS = registerWithCategory("cobalt_legs", () -> new ArmorFSB(MainRegistry.aMatCobalt, 2, RefStrings.MODID + ":textures/armor/cobalt_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_BOOTS = registerWithCategory("cobalt_boots", () -> new ArmorFSB(MainRegistry.aMatCobalt, 3, RefStrings.MODID + ":textures/armor/cobalt_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_HELMET = registerWithCategory("starmetal_helmet", () -> new ArmorFSB(MainRegistry.aMatStarmetal, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_PLATE = registerWithCategory("starmetal_plate", () -> new ArmorFSB(MainRegistry.aMatStarmetal, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_LEGS = registerWithCategory("starmetal_legs", () -> new ArmorFSB(MainRegistry.aMatStarmetal, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_BOOTS = registerWithCategory("starmetal_boots", () -> new ArmorFSB(MainRegistry.aMatStarmetal, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ROBES_HELMET = registerWithCategory("robes_helmet", () -> new ArmorFSB(ArmorMaterial.CHAIN, 0, RefStrings.MODID + ":textures/armor/robes_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ROBES_PLATE = registerWithCategory("robes_plate", () -> new ArmorFSB(ArmorMaterial.CHAIN, 1, RefStrings.MODID + ":textures/armor/robes_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ROBES_LEGS = registerWithCategory("robes_legs", () -> new ArmorFSB(ArmorMaterial.CHAIN, 2, RefStrings.MODID + ":textures/armor/robes_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ROBES_BOOTS = registerWithCategory("robes_boots", () -> new ArmorFSB(ArmorMaterial.CHAIN, 3, RefStrings.MODID + ":textures/armor/robes_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ZIRCONIUM_LEGS = registerWithCategory("zirconium_legs", () -> new ArmorFSB(aMatZirconium, 2, RefStrings.MODID + ":textures/armor/zirconium_2.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNT_HELMET = registerWithCategory("dnt_helmet", () -> new ArmorFSB(aMatDNT, 0, RefStrings.MODID + ":textures/armor/dnt_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNT_PLATE = registerWithCategory("dnt_plate", () -> new ArmorFSB(aMatDNT, 1, RefStrings.MODID + ":textures/armor/dnt_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNT_LEGS = registerWithCategory("dnt_legs", () -> new ArmorFSB(aMatDNT, 2, RefStrings.MODID + ":textures/armor/dnt_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNT_BOOTS = registerWithCategory("dnt_boots", () -> new ArmorFSB(aMatDNT, 3, RefStrings.MODID + ":textures/armor/dnt_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> T45_HELMET = registerWithCategory("t45_helmet", () -> new ArmorT45(aMatT45, 0, 1000000, 10000, 1000, 5, new Item.Properties().stacksTo(1)).enableVATS(true).setHasGeigerSound(true).setHasHardLanding(true).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 0).hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> T45_PLATE = registerWithCategory("t45_plate", () -> new ArmorT45(aMatT45, 1, 1000000, 10000, 1000, 5, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> T45_LEGS = registerWithCategory("t45_legs", () -> new ArmorT45(aMatT45, 2, 1000000, 10000, 1000, 5, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> T45_BOOTS = registerWithCategory("t45_boots", () -> new ArmorT45(aMatT45, 3, 1000000, 10000, 1000, 5, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEAMSUIT_HELMET = registerWithCategory("steamsuit_helmet", () -> new ArmorDesh(aMatDesh, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", Fluids.STEAM, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).setHasHardLanding(true).addEffect(new PotionEffect(Potion.digSpeed.id, 20, 4).hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEAMSUIT_PLATE = registerWithCategory("steamsuit_plate", () -> new ArmorDesh(aMatDesh, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", Fluids.STEAM, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEAMSUIT_LEGS = registerWithCategory("steamsuit_legs", () -> new ArmorDesh(aMatDesh, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", Fluids.STEAM, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEAMSUIT_BOOTS = registerWithCategory("steamsuit_boots", () -> new ArmorDesh(aMatDesh, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", Fluids.STEAM, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DIESELSUIT_HELMET = registerWithCategory("dieselsuit_helmet", () -> new ArmorDiesel(aMatDiesel, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", Fluids.DIESEL, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 2).addEffect(new PotionEffect(Potion.jump.id, 20, 2).enableThermalSight(true).enableVATS(true), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DIESELSUIT_PLATE = registerWithCategory("dieselsuit_plate", () -> new ArmorDiesel(aMatDiesel, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", Fluids.DIESEL, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DIESELSUIT_LEGS = registerWithCategory("dieselsuit_legs", () -> new ArmorDiesel(aMatDiesel, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", Fluids.DIESEL, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DIESELSUIT_BOOTS = registerWithCategory("dieselsuit_boots", () -> new ArmorDiesel(aMatDiesel, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", Fluids.DIESEL, 64_000, 500, 50, 1, new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJR_HELMET = registerWithCategory("ajr_helmet", () -> new ArmorAJR(aMatAJR, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).enableVATS(true).setHasGeigerSound(true).setHasHardLanding(true).addEffect(new PotionEffect(Potion.jump.id, 20, 0).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 0).setStep("hbm:step.metal").setJump("hbm:step.iron_jump").setFall("hbm:step.iron_land").hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJR_PLATE = registerWithCategory("ajr_plate", () -> new ArmorAJR(aMatAJR, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJR_LEGS = registerWithCategory("ajr_legs", () -> new ArmorAJR(aMatAJR, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJR_BOOTS = registerWithCategory("ajr_boots", () -> new ArmorAJR(aMatAJR, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJRO_HELMET = registerWithCategory("ajro_helmet", () -> new ArmorAJRO(aMatAJR, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).enableVATS(true).setHasGeigerSound(true).setHasHardLanding(true).addEffect(new PotionEffect(Potion.jump.id, 20, 0).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 0).setStep("hbm:step.metal").setJump("hbm:step.iron_jump").setFall("hbm:step.iron_land").hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJRO_PLATE = registerWithCategory("ajro_plate", () -> new ArmorAJRO(aMatAJR, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJRO_LEGS = registerWithCategory("ajro_legs", () -> new ArmorAJRO(aMatAJR, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> AJRO_BOOTS = registerWithCategory("ajro_boots", () -> new ArmorAJRO(aMatAJR, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RPA_HELMET = registerWithCategory("rpa_helmet", () -> new ArmorRPA(aMatAJR, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).enableVATS(true).setHasGeigerSound(true).setHasHardLanding(true).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 3).setStep("hbm:step.powered").setJump("hbm:step.powered").setFall("hbm:step.powered").hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RPA_PLATE = registerWithCategory("rpa_plate", () -> new ArmorRPA(aMatAJR, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RPA_LEGS = registerWithCategory("rpa_legs", () -> new ArmorRPA(aMatAJR, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RPA_BOOTS = registerWithCategory("rpa_boots", () -> new ArmorRPA(aMatAJR, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 2500000, 10000, 2000, 25, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BJ_HELMET = registerWithCategory("bj_helmet", () -> new ArmorBJ(aMatBJ, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 10000000, 10000, 1000, 100, new Item.Properties()).enableVATS(true).enableThermalSight(true).setHasGeigerSound(true).setHasHardLanding(true).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 1).addEffect(new PotionEffect(Potion.jump.id, 20, 0).addEffect(new PotionEffect(Potion.field_76443_y.id, 20, 0).addEffect(new PotionEffect(HbmPotion.radx.id, 20, 0).setStep("hbm:step.metal").setJump("hbm:step.iron_jump").setFall("hbm:step.iron_land"), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BJ_PLATE = registerWithCategory("bj_plate", () -> new ArmorBJ(aMatBJ, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 10000000, 10000, 1000, 100, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BJ_PLATE_JETPACK = registerWithCategory("bj_plate_jetpack", () -> new ArmorBJJetpack(aMatBJ, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 10000000, 10000, 1000, 100, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BJ_LEGS = registerWithCategory("bj_legs", () -> new ArmorBJ(aMatBJ, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 10000000, 10000, 1000, 100, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BJ_BOOTS = registerWithCategory("bj_boots", () -> new ArmorBJ(aMatBJ, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 10000000, 10000, 1000, 100, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ENVSUIT_HELMET = registerWithCategory("envsuit_helmet", () -> new ArmorEnvsuit(aMatEnv, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 100_000, 1_000, 250, 0, new Item.Properties()).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 1).addEffect(new PotionEffect(Potion.jump.id, 20, 0).hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ENVSUIT_PLATE = registerWithCategory("envsuit_plate", () -> new ArmorEnvsuit(aMatEnv, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 100_000, 1_000, 250, 0, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ENVSUIT_LEGS = registerWithCategory("envsuit_legs", () -> new ArmorEnvsuit(aMatEnv, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 100_000, 1_000, 250, 0, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ENVSUIT_BOOTS = registerWithCategory("envsuit_boots", () -> new ArmorEnvsuit(aMatEnv, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 100_000, 1_000, 250, 0, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEV_HELMET = registerWithCategory("hev_helmet", () -> new ArmorHEV(aMatHEV, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 1000000, 10000, 2500, 0, new Item.Properties()).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 1).addEffect(new PotionEffect(Potion.jump.id, 20, 0).setHasGeigerSound(true).setHasCustomGeiger(true).hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEV_PLATE = registerWithCategory("hev_plate", () -> new ArmorHEV(aMatHEV, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 1000000, 10000, 2500, 0, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEV_LEGS = registerWithCategory("hev_legs", () -> new ArmorHEV(aMatHEV, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 1000000, 10000, 2500, 0, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HEV_BOOTS = registerWithCategory("hev_boots", () -> new ArmorHEV(aMatHEV, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 1000000, 10000, 2500, 0, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JACKT = registerWithCategory("jackt", () -> new ModArmor(MainRegistry.aMatSteel, 1, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JACKT2 = registerWithCategory("jackt2", () -> new ModArmor(MainRegistry.aMatSteel, 1, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FAU_HELMET = registerWithCategory("fau_helmet", () -> new ArmorDigamma(aMatFau, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 10000000, 10000, 2500, 0, new Item.Properties()).addEffect(new PotionEffect(Potion.jump.id, 20, 1).setHasGeigerSound(true).enableThermalSight(true).setHasHardLanding(true).setStep("hbm:step.metal").setJump("hbm:step.iron_jump").setFall("hbm:step.iron_land").hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FAU_PLATE = registerWithCategory("fau_plate", () -> new ArmorDigamma(aMatFau, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 10000000, 10000, 2500, 0, new Item.Properties()).cloneStats((ArmorFSB).setFullSetForHide(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FAU_LEGS = registerWithCategory("fau_legs", () -> new ArmorDigamma(aMatFau, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 10000000, 10000, 2500, 0, new Item.Properties()).cloneStats((ArmorFSB).hides(EnumPlayerPart.LEFT_LEG, EnumPlayerPart.RIGHT_LEG).setFullSetForHide(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> FAU_BOOTS = registerWithCategory("fau_boots", () -> new ArmorDigamma(aMatFau, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 10000000, 10000, 2500, 0, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNS_HELMET = registerWithCategory("dns_helmet", () -> new ArmorDNT(aMatDNS, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", 1000000000, 1000000, 100000, 115, new Item.Properties()).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 9).addEffect(new PotionEffect(Potion.digSpeed.id, 20, 7).addEffect(new PotionEffect(Potion.jump.id, 20, 2).setHasGeigerSound(true).enableVATS(true).enableThermalSight(true).setHasHardLanding(true).setStep("hbm:step.metal").setJump("hbm:step.iron_jump").setFall("hbm:step.iron_land").hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNS_PLATE = registerWithCategory("dns_plate", () -> new ArmorDNT(aMatDNS, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", 1000000000, 1000000, 100000, 115, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNS_LEGS = registerWithCategory("dns_legs", () -> new ArmorDNT(aMatDNS, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", 1000000000, 1000000, 100000, 115, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNS_BOOTS = registerWithCategory("dns_boots", () -> new ArmorDNT(aMatDNS, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", 1000000000, 1000000, 100000, 115, new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TRENCHMASTER_HELMET = registerWithCategory("trenchmaster_helmet", () -> new ArmorTrenchmaster(aMatTrench, 0, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).addEffect(new PotionEffect(Potion.damageBoost.id, 20, 2).addEffect(new PotionEffect(Potion.digSpeed.id, 20, 1).addEffect(new PotionEffect(Potion.jump.id, 20, 1).addEffect(new PotionEffect(Potion.moveSpeed.id, 20, 0).enableVATS(true).setStepSize(1).hides(EnumPlayerPart.HAT), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TRENCHMASTER_PLATE = registerWithCategory("trenchmaster_plate", () -> new ArmorTrenchmaster(aMatTrench, 1, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TRENCHMASTER_LEGS = registerWithCategory("trenchmaster_legs", () -> new ArmorTrenchmaster(aMatTrench, 2, RefStrings.MODID + ":textures/armor/starmetal_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TRENCHMASTER_BOOTS = registerWithCategory("trenchmaster_boots", () -> new ArmorTrenchmaster(aMatTrench, 3, RefStrings.MODID + ":textures/armor/starmetal_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JACKT = registerWithCategory("jackt", () -> new ModArmor(MainRegistry.aMatSteel, 1, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JACKT2 = registerWithCategory("jackt2", () -> new ModArmor(MainRegistry.aMatSteel, 1, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHAINSAW = registerWithCategory("chainsaw", () -> new ItemChainsaw(25, -0.05, MainRegistry.tMatChainsaw, EnumToolType.AXE, 5000, 1, 250,
				Fluids.DIESEL, Fluids.DIESEL_CRACK, Fluids.KEROSENE, Fluids.BIOFUEL, Fluids.GASOLINE, Fluids.GASOLINE_LEADED, Fluids.PETROIL, Fluids.PETROIL_LEADED, Fluids.COALGAS, Fluids.COALGAS_LEADED, new Item.Properties()).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new ToolAbility.RecursionAbility(5).addHitAbility(new WeaponAbility.ChainsawAbility(10).addHitAbility(new WeaponAbility.BeheaderAbility().setShears(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_SWORD = registerWithCategory("schrabidium_sword", () -> new ItemSwordAbility(75, 0, MainRegistry.tMatSchrab, new Item.Properties()).addHitAbility(new WeaponAbility.RadiationAbility(50F).addHitAbility(new WeaponAbility.VampireAbility(2F).setRarity(EnumRarity.rare), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_PICKAXE = registerWithCategory("schrabidium_pickaxe", () -> new ItemToolAbility(20, 0, MainRegistry.tMatSchrab, EnumToolType.PICKAXE, new Item.Properties()).addHitAbility(new WeaponAbility.RadiationAbility(15F).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(10).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(5).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.ShredderAbility().setRarity(EnumRarity.rare), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_AXE = registerWithCategory("schrabidium_axe", () -> new ItemToolAbility(25, 0, MainRegistry.tMatSchrab, EnumToolType.AXE, new Item.Properties()).addHitAbility(new WeaponAbility.RadiationAbility(15F).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(10).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(5).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.ShredderAbility().addHitAbility(new WeaponAbility.BeheaderAbility().setRarity(EnumRarity.rare), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_SHOVEL = registerWithCategory("schrabidium_shovel", () -> new ItemToolAbility(15, 0, MainRegistry.tMatSchrab, EnumToolType.SHOVEL, new Item.Properties()).addHitAbility(new WeaponAbility.RadiationAbility(15F).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(10).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(5).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.ShredderAbility().setRarity(EnumRarity.rare), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SCHRABIDIUM_HOE = registerWithCategory("schrabidium_hoe", () -> new HoeSchrabidium(MainRegistry.tMatSchrab, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_SWORD = registerWithCategory("titanium_sword", () -> new ItemSwordAbility(6.5f, 0, MainRegistry.tMatTitan, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_PICKAXE = registerWithCategory("titanium_pickaxe", () -> new ItemToolAbility(4.5f, 0, MainRegistry.tMatTitan, EnumToolType.PICKAXE, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_AXE = registerWithCategory("titanium_axe", () -> new ItemToolAbility(5.5f, 0, MainRegistry.tMatTitan, EnumToolType.AXE, new Item.Properties()).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_SHOVEL = registerWithCategory("titanium_shovel", () -> new ItemToolAbility(3.5f, 0, MainRegistry.tMatTitan, EnumToolType.SHOVEL, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> TITANIUM_HOE = registerWithCategory("titanium_hoe", () -> new ModHoe(MainRegistry.tMatTitan, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_SWORD = registerWithCategory("steel_sword", () -> new ItemSwordAbility(6F, 0, MainRegistry.tMatSteel, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_PICKAXE = registerWithCategory("steel_pickaxe", () -> new ItemToolAbility(4F, 0, MainRegistry.tMatSteel, EnumToolType.PICKAXE, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_AXE = registerWithCategory("steel_axe", () -> new ItemToolAbility(5F, 0, MainRegistry.tMatSteel, EnumToolType.AXE, new Item.Properties()).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_SHOVEL = registerWithCategory("steel_shovel", () -> new ItemToolAbility(3F, 0, MainRegistry.tMatSteel, EnumToolType.SHOVEL, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STEEL_HOE = registerWithCategory("steel_hoe", () -> new ModHoe(MainRegistry.tMatSteel, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_SWORD = registerWithCategory("alloy_sword", () -> new ItemSwordAbility(8F, 0, MainRegistry.tMatAlloy, new Item.Properties()).addHitAbility(new WeaponAbility.StunAbility(2), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_PICKAXE = registerWithCategory("alloy_pickaxe", () -> new ItemToolAbility(5F, 0, MainRegistry.tMatAlloy, EnumToolType.PICKAXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_AXE = registerWithCategory("alloy_axe", () -> new ItemToolAbility(7F, 0, MainRegistry.tMatAlloy, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(3).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_SHOVEL = registerWithCategory("alloy_shovel", () -> new ItemToolAbility(4F, 0, MainRegistry.tMatAlloy, EnumToolType.SHOVEL, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ALLOY_HOE = registerWithCategory("alloy_hoe", () -> new ModHoe(MainRegistry.tMatAlloy, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_SWORD = registerWithCategory("cmb_sword", () -> new ItemSwordAbility(35F, 0, MainRegistry.tMatCMB, new Item.Properties()).addHitAbility(new WeaponAbility.StunAbility(2).addHitAbility(new WeaponAbility.VampireAbility(2F), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_PICKAXE = registerWithCategory("cmb_pickaxe", () -> new ItemToolAbility(10F, 0, MainRegistry.tMatCMB, EnumToolType.PICKAXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_AXE = registerWithCategory("cmb_axe", () -> new ItemToolAbility(30F, 0, MainRegistry.tMatCMB, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(3).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_SHOVEL = registerWithCategory("cmb_shovel", () -> new ItemToolAbility(8F, 0, MainRegistry.tMatCMB, EnumToolType.SHOVEL, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CMB_HOE = registerWithCategory("cmb_hoe", () -> new ModHoe(MainRegistry.tMatCMB, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ELEC_SWORD = registerWithCategory("elec_sword", () -> new ItemSwordAbilityPower(12.5f, 0, MainRegistry.tMatElec, 500000, 1000, 100, new Item.Properties()).addHitAbility(new WeaponAbility.StunAbility(5), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ELEC_PICKAXE = registerWithCategory("elec_pickaxe", () -> new ItemToolAbilityPower(6F, 0, MainRegistry.tMatElec, EnumToolType.PICKAXE, 500000, 1000, 100, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(2), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ELEC_AXE = registerWithCategory("elec_axe", () -> new ItemToolAbilityPower(10F, 0, MainRegistry.tMatElec, EnumToolType.AXE, 500000, 1000, 100, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(2).addHitAbility(new WeaponAbility.ChainsawAbility(15).addHitAbility(new WeaponAbility.BeheaderAbility().setShears(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ELEC_SHOVEL = registerWithCategory("elec_shovel", () -> new ItemToolAbilityPower(5F, 0, MainRegistry.tMatElec, EnumToolType.SHOVEL, 500000, 1000, 100, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(2), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DESH_SWORD = registerWithCategory("desh_sword", () -> new ItemSwordAbility(12.5f, 0, MainRegistry.tMatDesh, new Item.Properties()).addHitAbility(new WeaponAbility.StunAbility(2), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DESH_PICKAXE = registerWithCategory("desh_pickaxe", () -> new ItemToolAbility(5F, -0.05, MainRegistry.tMatDesh, EnumToolType.PICKAXE, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.RecursionAbility(3).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(2), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DESH_AXE = registerWithCategory("desh_axe", () -> new ItemToolAbility(7.5f, -0.05, MainRegistry.tMatDesh, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.RecursionAbility(3).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(2).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DESH_SHOVEL = registerWithCategory("desh_shovel", () -> new ItemToolAbility(4F, -0.05, MainRegistry.tMatDesh, EnumToolType.SHOVEL, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.RecursionAbility(3).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(2), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DESH_HOE = registerWithCategory("desh_hoe", () -> new ModHoe(MainRegistry.tMatDesh, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_SWORD = registerWithCategory("cobalt_sword", () -> new ItemSwordAbility(12F, 0, MainRegistry.tMatCobalt, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_PICKAXE = registerWithCategory("cobalt_pickaxe", () -> new ItemToolAbility(4F, 0, MainRegistry.tMatCobalt, EnumToolType.PICKAXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(1), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_AXE = registerWithCategory("cobalt_axe", () -> new ItemToolAbility(6F, 0, MainRegistry.tMatCobalt, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(1).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_SHOVEL = registerWithCategory("cobalt_shovel", () -> new ItemToolAbility(3.5f, 0, MainRegistry.tMatCobalt, EnumToolType.SHOVEL, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(1), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_HOE = registerWithCategory("cobalt_hoe", () -> new ModHoe(MainRegistry.tMatCobalt, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_DECORATED_SWORD = registerWithCategory("cobalt_decorated_sword", () -> new ItemSwordAbility(15F, 0, matDecCobalt, new Item.Properties()).addHitAbility(new WeaponAbility.BobbleAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_DECORATED_PICKAXE = registerWithCategory("cobalt_decorated_pickaxe", () -> new ItemToolAbility(6F, 0, matDecCobalt, EnumToolType.PICKAXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_DECORATED_AXE = registerWithCategory("cobalt_decorated_axe", () -> new ItemToolAbility(8F, 0, matDecCobalt, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(3).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_DECORATED_SHOVEL = registerWithCategory("cobalt_decorated_shovel", () -> new ItemToolAbility(5F, 0, matDecCobalt, EnumToolType.SHOVEL, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> COBALT_DECORATED_HOE = registerWithCategory("cobalt_decorated_hoe", () -> new ModHoe(matDecCobalt, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_SWORD = registerWithCategory("starmetal_sword", () -> new ItemSwordAbility(25F, 0, matStarmetal, new Item.Properties()).addHitAbility(new WeaponAbility.BeheaderAbility().addHitAbility(new WeaponAbility.StunAbility(3).addHitAbility(new WeaponAbility.BobbleAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_PICKAXE = registerWithCategory("starmetal_pickaxe", () -> new ItemToolAbility(8F, 0, matStarmetal, EnumToolType.PICKAXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(6).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(5).addHitAbility(new WeaponAbility.StunAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_AXE = registerWithCategory("starmetal_axe", () -> new ItemToolAbility(12F, 0, matStarmetal, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(6).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(5).addHitAbility(new WeaponAbility.BeheaderAbility().addHitAbility(new WeaponAbility.StunAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_SHOVEL = registerWithCategory("starmetal_shovel", () -> new ItemToolAbility(7F, 0, matStarmetal, EnumToolType.SHOVEL, new Item.Properties()).addBreakAbility(new ToolAbility.RecursionAbility(6).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new LuckAbility(5).addHitAbility(new WeaponAbility.StunAbility(3), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STARMETAL_HOE = registerWithCategory("starmetal_hoe", () -> new ModHoe(matStarmetal, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CENTRI_STICK = registerWithCategory("centri_stick", () -> new ItemToolAbility(3F, 0, MainRegistry.tMatElec, EnumToolType.MINER, new Item.Properties()).addBreakAbility(new ToolAbility.CentrifugeAbility().setMaxDamage(50), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SMASHING_HAMMER = registerWithCategory("smashing_hammer", () -> new ItemToolAbility(12F, -0.1, MainRegistry.tMatSteel, EnumToolType.MINER, new Item.Properties()).addBreakAbility(new ToolAbility.ShredderAbility().setMaxDamage(2500), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DRAX = registerWithCategory("drax", () -> new ItemToolAbilityPower(10F, -0.05, MainRegistry.tMatElec, EnumToolType.MINER, 500000000, 100000, 5000, new Item.Properties()).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.ShredderAbility().addBreakAbility(new ToolAbility.LuckAbility(2).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(5), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DRAX_MK2 = registerWithCategory("drax_mk2", () -> new ItemToolAbilityPower(15F, -0.05, MainRegistry.tMatElec, EnumToolType.MINER, 1000000000, 250000, 7500, new Item.Properties()).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.ShredderAbility().addBreakAbility(new ToolAbility.CentrifugeAbility().addBreakAbility(new ToolAbility.LuckAbility(3).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.HammerAbility(3).addBreakAbility(new ToolAbility.RecursionAbility(7), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DRAX_MK3 = registerWithCategory("drax_mk3", () -> new ItemToolAbilityPower(20F, -0.05, MainRegistry.tMatElec, EnumToolType.MINER, 2500000000L, 500000, 10000, new Item.Properties()).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.ShredderAbility().addBreakAbility(new ToolAbility.CentrifugeAbility().addBreakAbility(new ToolAbility.CrystallizerAbility().addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new ToolAbility.LuckAbility(4).addBreakAbility(new ToolAbility.HammerAbility(1).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.HammerAbility(3).addBreakAbility(new ToolAbility.HammerAbility(4).addBreakAbility(new ToolAbility.RecursionAbility(9), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BISMUTH_PICKAXE = registerWithCategory("bismuth_pickaxe", () -> new ItemToolAbility(15F, 0, matBismuth, EnumToolType.MINER, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.ShredderAbility().addBreakAbility(new ToolAbility.LuckAbility(2).addBreakAbility(new ToolAbility.SilkAbility().addHitAbility(new WeaponAbility.StunAbility(5).addHitAbility(new WeaponAbility.VampireAbility(2F).addHitAbility(new WeaponAbility.BeheaderAbility().setDepthRockBreaker(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BISMUTH_AXE = registerWithCategory("bismuth_axe", () -> new ItemToolAbility(25F, 0, matBismuth, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.ShredderAbility().addBreakAbility(new ToolAbility.LuckAbility(2).addBreakAbility(new ToolAbility.SilkAbility().addHitAbility(new WeaponAbility.StunAbility(10).addHitAbility(new WeaponAbility.VampireAbility(3F).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> VOLCANIC_PICKAXE = registerWithCategory("volcanic_pickaxe", () -> new ItemToolAbility(15F, 0, matVolcano, EnumToolType.MINER, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.LuckAbility(3).addBreakAbility(new ToolAbility.SilkAbility().addHitAbility(new WeaponAbility.FireAbility(5).addHitAbility(new WeaponAbility.VampireAbility(2F).addHitAbility(new WeaponAbility.BeheaderAbility().setDepthRockBreaker(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> VOLCANIC_AXE = registerWithCategory("volcanic_axe", () -> new ItemToolAbility(25F, 0, matVolcano, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.SmelterAbility().addBreakAbility(new ToolAbility.LuckAbility(3).addBreakAbility(new ToolAbility.SilkAbility().addHitAbility(new WeaponAbility.FireAbility(10).addHitAbility(new WeaponAbility.VampireAbility(3F).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLOROPHYTE_PICKAXE = registerWithCategory("chlorophyte_pickaxe", () -> new ItemToolAbility(20F, 0, matChlorophyte, EnumToolType.MINER, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.LuckAbility(4).addBreakAbility(new ToolAbility.CentrifugeAbility().addBreakAbility(new ToolAbility.MercuryAbility().addHitAbility(new WeaponAbility.StunAbility(10).addHitAbility(new WeaponAbility.VampireAbility(5F).addHitAbility(new WeaponAbility.BeheaderAbility().setDepthRockBreaker(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLOROPHYTE_AXE = registerWithCategory("chlorophyte_axe", () -> new ItemToolAbility(50F, 0, matChlorophyte, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(2).addBreakAbility(new ToolAbility.RecursionAbility(4).addBreakAbility(new ToolAbility.LuckAbility(4).addHitAbility(new WeaponAbility.StunAbility(15).addHitAbility(new WeaponAbility.VampireAbility(10F).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MESE_PICKAXE = registerWithCategory("mese_pickaxe", () -> new ItemToolAbility(35F, 0, matMese, EnumToolType.MINER, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(3).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.CrystallizerAbility().addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new ToolAbility.LuckAbility(9).addBreakAbility(new ToolAbility.ExplosionAbility(2.5f).addBreakAbility(new ToolAbility.ExplosionAbility(5F).addBreakAbility(new ToolAbility.ExplosionAbility(10F).addBreakAbility(new ToolAbility.ExplosionAbility(15F).addHitAbility(new WeaponAbility.StunAbility(10).addHitAbility(new WeaponAbility.PhosphorusAbility(60).addHitAbility(new WeaponAbility.BeheaderAbility().setDepthRockBreaker(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MESE_AXE = registerWithCategory("mese_axe", () -> new ItemToolAbility(75F, 0, matMese, EnumToolType.AXE, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(3).addBreakAbility(new ToolAbility.RecursionAbility(5).addBreakAbility(new ToolAbility.SilkAbility().addBreakAbility(new ToolAbility.LuckAbility(9).addBreakAbility(new ToolAbility.ExplosionAbility(2.5f).addBreakAbility(new ToolAbility.ExplosionAbility(5F).addBreakAbility(new ToolAbility.ExplosionAbility(10F).addBreakAbility(new ToolAbility.ExplosionAbility(15F).addHitAbility(new WeaponAbility.StunAbility(15).addHitAbility(new WeaponAbility.PhosphorusAbility(90).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DNT_SWORD = registerWithCategory("dnt_sword", () -> new ItemSwordAbility(12F, 0, matMese, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DWARVEN_PICKAXE = registerWithCategory("dwarven_pickaxe", () -> new ItemToolAbility(5F, -0.1, matDwarf, EnumToolType.MINER, new Item.Properties()).addBreakAbility(new ToolAbility.HammerAbility(1).setMaxDamage(250), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD = registerWithCategory("meteorite_sword", () -> new ItemSwordMeteorite(9F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_SEARED = registerWithCategory("meteorite_sword_seared", () -> new ItemSwordMeteorite(10F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_REFORGED = registerWithCategory("meteorite_sword_reforged", () -> new ItemSwordMeteorite(12.5f, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_HARDENED = registerWithCategory("meteorite_sword_hardened", () -> new ItemSwordMeteorite(15F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_ALLOYED = registerWithCategory("meteorite_sword_alloyed", () -> new ItemSwordMeteorite(17.5f, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_MACHINED = registerWithCategory("meteorite_sword_machined", () -> new ItemSwordMeteorite(20F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_TREATED = registerWithCategory("meteorite_sword_treated", () -> new ItemSwordMeteorite(22.5f, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_ETCHED = registerWithCategory("meteorite_sword_etched", () -> new ItemSwordMeteorite(25F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_BRED = registerWithCategory("meteorite_sword_bred", () -> new ItemSwordMeteorite(30F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_IRRADIATED = registerWithCategory("meteorite_sword_irradiated", () -> new ItemSwordMeteorite(35F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_FUSED = registerWithCategory("meteorite_sword_fused", () -> new ItemSwordMeteorite(50F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> METEORITE_SWORD_BALEFUL = registerWithCategory("meteorite_sword_baleful", () -> new ItemSwordMeteorite(75F, 0, matMeteorite, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MASK_OF_INFAMY = registerWithCategory("mask_of_infamy", () -> new MaskOfInfamy(ArmorMaterial.IRON, 0, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_HELMET = registerWithCategory("hazmat_helmet", () -> new ArmorHazmatMask(MainRegistry.aMatHaz, 0, RefStrings.MODID + ":textures/armor/hazmat_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_PLATE = registerWithCategory("hazmat_plate", () -> new ArmorHazmat(MainRegistry.aMatHaz, 1, RefStrings.MODID + ":textures/armor/hazmat_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_LEGS = registerWithCategory("hazmat_legs", () -> new ArmorHazmat(MainRegistry.aMatHaz, 2, RefStrings.MODID + ":textures/armor/hazmat_2.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_BOOTS = registerWithCategory("hazmat_boots", () -> new ArmorHazmat(MainRegistry.aMatHaz, 3, RefStrings.MODID + ":textures/armor/hazmat_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_HELMET_RED = registerWithCategory("hazmat_helmet_red", () -> new ArmorHazmatMask(MainRegistry.aMatHaz2, 0, "hbm:textures/models/ModelHazRed.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_PLATE_RED = registerWithCategory("hazmat_plate_red", () -> new ArmorHazmat(MainRegistry.aMatHaz2, 1, RefStrings.MODID + ":textures/armor/hazmat_1_red.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_LEGS_RED = registerWithCategory("hazmat_legs_red", () -> new ArmorHazmat(MainRegistry.aMatHaz2, 2, RefStrings.MODID + ":textures/armor/hazmat_2_red.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_BOOTS_RED = registerWithCategory("hazmat_boots_red", () -> new ArmorHazmat(MainRegistry.aMatHaz2, 3, RefStrings.MODID + ":textures/armor/hazmat_1_red.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_HELMET_GREY = registerWithCategory("hazmat_helmet_grey", () -> new ArmorHazmatMask(MainRegistry.aMatHaz3, 0, "hbm:textures/models/ModelHazGrey.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_PLATE_GREY = registerWithCategory("hazmat_plate_grey", () -> new ArmorHazmat(MainRegistry.aMatHaz3, 1, RefStrings.MODID + ":textures/armor/hazmat_1_grey.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_LEGS_GREY = registerWithCategory("hazmat_legs_grey", () -> new ArmorHazmat(MainRegistry.aMatHaz3, 2, RefStrings.MODID + ":textures/armor/hazmat_2_grey.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_BOOTS_GREY = registerWithCategory("hazmat_boots_grey", () -> new ArmorHazmat(MainRegistry.aMatHaz3, 3, RefStrings.MODID + ":textures/armor/hazmat_1_grey.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_PAA_HELMET = registerWithCategory("hazmat_paa_helmet", () -> new ArmorHazmatMask(MainRegistry.aMatPaa, 0, RefStrings.MODID + ":textures/armor/hazmat_paa_1.png", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_PAA_PLATE = registerWithCategory("hazmat_paa_plate", () -> new ArmorHazmat(MainRegistry.aMatPaa, 1, RefStrings.MODID + ":textures/armor/hazmat_paa_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_PAA_LEGS = registerWithCategory("hazmat_paa_legs", () -> new ArmorHazmat(MainRegistry.aMatPaa, 2, RefStrings.MODID + ":textures/armor/hazmat_paa_2.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HAZMAT_PAA_BOOTS = registerWithCategory("hazmat_paa_boots", () -> new ArmorHazmat(MainRegistry.aMatPaa, 3, RefStrings.MODID + ":textures/armor/hazmat_paa_1.png", new Item.Properties()).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> LIQUIDATOR_HELMET = registerWithCategory("liquidator_helmet", () -> new ArmorLiquidatorMask(aMatLiquidator, 0, RefStrings.MODID + ":textures/armor/liquidator_helmet.png", new Item.Properties().stacksTo(1)).setStep("hbm:step.metal").setJump("hbm:step.iron_jump").setFall("hbm:step.iron_land"), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> LIQUIDATOR_PLATE = registerWithCategory("liquidator_plate", () -> new ArmorLiquidator(aMatLiquidator, 1, RefStrings.MODID + ":textures/armor/liquidator_1.png", new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> LIQUIDATOR_LEGS = registerWithCategory("liquidator_legs", () -> new ArmorLiquidator(aMatLiquidator, 2, RefStrings.MODID + ":textures/armor/liquidator_2.png", new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> LIQUIDATOR_BOOTS = registerWithCategory("liquidator_boots", () -> new ArmorLiquidator(aMatLiquidator, 3, RefStrings.MODID + ":textures/armor/liquidator_1.png", new Item.Properties().stacksTo(1)).cloneStats((ArmorFSB), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JETPACK_BOOST = registerWithCategory("jetpack_boost", () -> new JetpackBooster(Fluids.BALEFIRE, 32000, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JETPACK_BREAK = registerWithCategory("jetpack_break", () -> new JetpackBreak(Fluids.KEROSENE, 12000, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JETPACK_FLY = registerWithCategory("jetpack_fly", () -> new JetpackRegular(Fluids.KEROSENE, 12000, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> JETPACK_VECTOR = registerWithCategory("jetpack_vector", () -> new JetpackVectorized(Fluids.KEROSENE, 16000, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WINGS_MURK = registerWithCategory("wings_murk", () -> new WingsMurk(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WINGS_LIMP = registerWithCategory("wings_limp", () -> new WingsMurk(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CAPE_RADIATION = registerWithCategory("cape_radiation", () -> new ArmorModel(ArmorMaterial.CHAIN, 1, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAPE_GASMASK = registerWithCategory("cape_gasmask", () -> new ArmorModel(ArmorMaterial.CHAIN, 1, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAPE_SCHRABIDIUM = registerWithCategory("cape_schrabidium", () -> new ArmorModel(MainRegistry.aMatSchrab, 1, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> CAPE_HIDDEN = registerWithCategory("cape_hidden", () -> new ArmorModel(ArmorMaterial.CHAIN, 1, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> SCHRABIDIUM_HAMMER = registerWithCategory("schrabidium_hammer", () -> new WeaponSpecial(MainRegistry.tMatHammmer, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SHIMMER_SLEDGE = registerWithCategory("shimmer_sledge", () -> new WeaponSpecial(MainRegistry.enumToolMaterialSledge, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SHIMMER_AXE = registerWithCategory("shimmer_axe", () -> new WeaponSpecial(MainRegistry.enumToolMaterialSledge, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOTTLE_OPENER = registerWithCategory("bottle_opener", () -> new WeaponSpecial(MainRegistry.enumToolMaterialBottleOpener, new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> PCH = registerWithCategory("pch", () -> new WeaponSpecial(MainRegistry.tMatHammmer, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MATCHSTICK = registerWithCategory("matchstick", () -> new ItemMatch(new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BALEFIRE_AND_STEEL = registerWithCategory("balefire_and_steel", () -> new ItemBalefireMatch(new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CROWBAR = registerWithCategory("crowbar", () -> new ModSword(MainRegistry.tMatSteel, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WRENCH = registerWithCategory("wrench", () -> new WeaponSpecial(MainRegistry.tMatSteel, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WRENCH_FLIPPED = registerWithCategory("wrench_flipped", () -> new WeaponSpecial(MainRegistry.tMatElec, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MEMESPOON = registerWithCategory("memespoon", () -> new WeaponSpecial(MainRegistry.tMatSteel, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WOOD_GAVEL = registerWithCategory("wood_gavel", () -> new WeaponSpecial(ToolMaterial.WOOD, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> LEAD_GAVEL = registerWithCategory("lead_gavel", () -> new WeaponSpecial(MainRegistry.tMatSteel, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> DIAMOND_GAVEL = registerWithCategory("diamond_gavel", () -> new WeaponSpecial(ToolMaterial.EMERALD, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MESE_GAVEL = registerWithCategory("mese_gavel", () -> new ItemSwordAbility(250, 1.5, matMeseGavel, new Item.Properties().stacksTo(1)).addHitAbility(new WeaponAbility.PhosphorusAbility(60).addHitAbility(new WeaponAbility.RadiationAbility(500).addHitAbility(new WeaponAbility.StunAbility(10).addHitAbility(new WeaponAbility.VampireAbility(50).addHitAbility(new WeaponAbility.BeheaderAbility(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_HIT = registerWithCategory("multitool_hit", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_DIG = registerWithCategory("multitool_dig", () -> new ItemMultitoolTool(4.0f, MainRegistry.enumToolMaterialMultitool, ItemMultitoolTool.getAllBlocks(, new Item.Properties()).setFull3D(), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> MULTITOOL_SILK = registerWithCategory("multitool_silk", () -> new ItemMultitoolTool(4.0f, MainRegistry.enumToolMaterialMultitool, ItemMultitoolTool.getAllBlocks(, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_EXT = registerWithCategory("multitool_ext", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_MINER = registerWithCategory("multitool_miner", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_BEAM = registerWithCategory("multitool_beam", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_SKY = registerWithCategory("multitool_sky", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_MEGA = registerWithCategory("multitool_mega", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_JOULE = registerWithCategory("multitool_joule", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MULTITOOL_DECON = registerWithCategory("multitool_decon", () -> new ItemMultitoolPassive(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WEAPON_SAW = registerWithCategory("weapon_saw", () -> new ModSword(MainRegistry.enumToolMaterialSaw, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WEAPON_BAT = registerWithCategory("weapon_bat", () -> new ModSword(MainRegistry.enumToolMaterialBat, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WEAPON_BAT_NAIL = registerWithCategory("weapon_bat_nail", () -> new ModSword(MainRegistry.enumToolMaterialBatNail, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WEAPON_GOLF_CLUB = registerWithCategory("weapon_golf_club", () -> new ModSword(MainRegistry.enumToolMaterialGolfClub, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WEAPON_PIPE_RUSTY = registerWithCategory("weapon_pipe_rusty", () -> new ModSword(MainRegistry.enumToolMaterialPipeRusty, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> WEAPON_PIPE_LEAD = registerWithCategory("weapon_pipe_lead", () -> new ModSword(MainRegistry.enumToolMaterialPipeLead, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> REER_GRAAR = registerWithCategory("reer_graar", () -> new ModSword(MainRegistry.tMatTitan, new Item.Properties()).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> STOPSIGN = registerWithCategory("stopsign", () -> new WeaponSpecial(MainRegistry.tMatAlloy, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SOPSIGN = registerWithCategory("sopsign", () -> new WeaponSpecial(MainRegistry.tMatAlloy, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHERNOBYLSIGN = registerWithCategory("chernobylsign", () -> new WeaponSpecial(MainRegistry.tMatAlloy, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CRYSTAL_HORN = registerWithCategory("crystal_horn", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> CRYSTAL_CHARRED = registerWithCategory("crystal_charred", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.PARTS);
public static final RegistryObject<Item> BUCKET_MUD = registerWithCategory("bucket_mud", () -> new ItemModBucket(ModBlocks.mud_block, new Item.Properties()).setContainerItem(Items.bucket), ItemCategory.BLOCK);
public static final RegistryObject<Item> BUCKET_ACID = registerWithCategory("bucket_acid", () -> new ItemModBucket(ModBlocks.acid_block, new Item.Properties()).setContainerItem(Items.bucket), ItemCategory.BLOCK);
public static final RegistryObject<Item> BUCKET_TOXIC = registerWithCategory("bucket_toxic", () -> new ItemModBucket(ModBlocks.toxic_block, new Item.Properties()).setContainerItem(Items.bucket), ItemCategory.BLOCK);
public static final RegistryObject<Item> BUCKET_SCHRABIDIC_ACID = registerWithCategory("bucket_schrabidic_acid", () -> new ItemModBucket(ModBlocks.schrabidic_block, new Item.Properties()).setContainerItem(Items.bucket), ItemCategory.BLOCK);
public static final RegistryObject<Item> BUCKET_SULFURIC_ACID = registerWithCategory("bucket_sulfuric_acid", () -> new ItemModBucket(ModBlocks.sulfuric_acid_block, new Item.Properties()).setContainerItem(Items.bucket), ItemCategory.BLOCK);
public static final RegistryObject<Item> DOOR_METAL = registerWithCategory("door_metal", () -> new ItemModDoor(new Item.Properties()), ItemCategory.BLOCK);
public static final RegistryObject<Item> DOOR_OFFICE = registerWithCategory("door_office", () -> new ItemModDoor(new Item.Properties()), ItemCategory.BLOCK);
public static final RegistryObject<Item> DOOR_BUNKER = registerWithCategory("door_bunker", () -> new ItemModDoor(new Item.Properties()), ItemCategory.BLOCK);
public static final RegistryObject<Item> DOOR_RED = registerWithCategory("door_red", () -> new ItemModDoor(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> SLIDING_BLAST_DOOR_SKIN = registerWithCategory("sliding_blast_door_skin", () -> new ItemSlidingBlastDoorSkin(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RECORD_LC = registerWithCategory("record_lc", () -> new ItemModRecord("lc", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RECORD_SS = registerWithCategory("record_ss", () -> new ItemModRecord("ss", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RECORD_VC = registerWithCategory("record_vc", () -> new ItemModRecord("vc", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> RECORD_GLASS = registerWithCategory("record_glass", () -> new ItemModRecord("glass", new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOOK_GUIDE = registerWithCategory("book_guide", () -> new ItemGuideBook(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> BOOK_LORE = registerWithCategory("book_lore", () -> new ItemBookLore(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HOLOTAPE_IMAGE = registerWithCategory("holotape_image", () -> new ItemHolotapeImage(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> HOLOTAPE_DAMAGED = registerWithCategory("holotape_damaged", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLAY_TABLET = registerWithCategory("clay_tablet", () -> new ItemClayTablet(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> POLAROID = registerWithCategory("polaroid", () -> new ItemPolaroid(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> GLITCH = registerWithCategory("glitch", () -> new ItemGlitch(new Item.Properties().stacksTo(1)), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> LETTER = registerWithCategory("letter", () -> new ItemStarterKit(new Item.Properties()), ItemCategory.CONSUMABLE);
public static final RegistryObject<Item> BOOK_SECRET = registerWithCategory("book_secret", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.POLAROIDID);
public static final RegistryObject<Item> BOOK_OF_ = registerWithCategory("book_of_", () -> new ItemBook(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PAGE_OF_ = registerWithCategory("page_of_", () -> new ItemEnumMulti(ItemEnums.EnumPages.class, true, false, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOOK_LEMEGETON = registerWithCategory("book_lemegeton", () -> new ItemBookLemegeton(new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BURNT_BARK = registerWithCategory("burnt_bark", () -> new ItemCustomLore(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE1 = registerWithCategory("chlorine1", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE2 = registerWithCategory("chlorine2", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE3 = registerWithCategory("chlorine3", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE4 = registerWithCategory("chlorine4", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE5 = registerWithCategory("chlorine5", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE6 = registerWithCategory("chlorine6", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE7 = registerWithCategory("chlorine7", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CHLORINE8 = registerWithCategory("chlorine8", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC1 = registerWithCategory("pc1", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC2 = registerWithCategory("pc2", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC3 = registerWithCategory("pc3", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC4 = registerWithCategory("pc4", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC5 = registerWithCategory("pc5", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC6 = registerWithCategory("pc6", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC7 = registerWithCategory("pc7", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> PC8 = registerWithCategory("pc8", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD1 = registerWithCategory("cloud1", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD2 = registerWithCategory("cloud2", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD3 = registerWithCategory("cloud3", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD4 = registerWithCategory("cloud4", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD5 = registerWithCategory("cloud5", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD6 = registerWithCategory("cloud6", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD7 = registerWithCategory("cloud7", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> CLOUD8 = registerWithCategory("cloud8", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE1 = registerWithCategory("orange1", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE2 = registerWithCategory("orange2", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE3 = registerWithCategory("orange3", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE4 = registerWithCategory("orange4", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE5 = registerWithCategory("orange5", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE6 = registerWithCategory("orange6", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE7 = registerWithCategory("orange7", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ORANGE8 = registerWithCategory("orange8", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> NOTHING = registerWithCategory("nothing", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> ACHIEVEMENT_ICON = registerWithCategory("achievement_icon", () -> new ItemEnumMulti(ItemEnums.EnumAchievementType.class, true, true, new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOB_METALWORKS = registerWithCategory("bob_metalworks", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOB_ASSEMBLY = registerWithCategory("bob_assembly", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOB_CHEMISTRY = registerWithCategory("bob_chemistry", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOB_OIL = registerWithCategory("bob_oil", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> BOB_NUCLEAR = registerWithCategory("bob_nuclear", () -> new Item(new Item.Properties()), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MYSTERYSHOVEL = registerWithCategory("mysteryshovel", () -> new ItemMS(new Item.Properties().stacksTo(1)).setFull3D(), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> MEMORY = registerWithCategory("memory", () -> new ItemBattery(Long.MAX_VALUE / 100L, 100000000000000L, 100000000000000L, new Item.Properties().stacksTo(1)), ItemCategory.TEMPLATE);
public static final RegistryObject<Item> UNLOC = registerWithCategory("unloc", () -> new ItemRemap(item, meta, new Item.Properties()), ItemCategory.TEMPLATE);